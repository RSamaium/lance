{"version":3,"file":"lance-gg.js","sources":["../../node_modules/uuid/dist/esm-node/rng.js","../../node_modules/uuid/dist/esm-node/regex.js","../../node_modules/uuid/dist/esm-node/validate.js","../../node_modules/uuid/dist/esm-node/stringify.js","../../node_modules/uuid/dist/esm-node/v4.js","../../src/GameWorld.js","../../node_modules/type/value/is.js","../../node_modules/type/object/is.js","../../node_modules/type/prototype/is.js","../../node_modules/type/function/is.js","../../node_modules/type/plain-function/is.js","../../node_modules/es5-ext/object/assign/is-implemented.js","../../node_modules/es5-ext/object/keys/is-implemented.js","../../node_modules/es5-ext/function/noop.js","../../node_modules/es5-ext/object/is-value.js","../../node_modules/es5-ext/object/keys/shim.js","../../node_modules/es5-ext/object/keys/index.js","../../node_modules/es5-ext/object/valid-value.js","../../node_modules/es5-ext/object/assign/shim.js","../../node_modules/es5-ext/object/assign/index.js","../../node_modules/es5-ext/object/normalize-options.js","../../node_modules/es5-ext/string/#/contains/is-implemented.js","../../node_modules/es5-ext/string/#/contains/shim.js","../../node_modules/es5-ext/string/#/contains/index.js","../../node_modules/d/index.js","../../node_modules/es5-ext/object/valid-callable.js","../../node_modules/event-emitter/index.js","../../src/game/Timer.js","../../src/lib/Trace.js","../../src/GameEngine.js","../../src/physics/PhysicsEngine.js","../../src/lib/Utils.js","../../src/serialize/BaseTypes.js","../../src/serialize/Serializable.js","../../src/serialize/TwoVector.js","../../src/physics/SimplePhysics/HSHG.js","../../src/physics/SimplePhysics/HSHGCollisionDetection.js","../../src/physics/SimplePhysics/BruteForceCollisionDetection.js","../../src/physics/SimplePhysicsEngine.js","../../src/physics/CannonPhysicsEngine.js","../../src/serialize/ThreeVector.js","../../src/serialize/Quaternion.js","../../src/serialize/GameObject.js","../../src/lib/MathUtils.js","../../src/serialize/DynamicObject.js","../../src/serialize/PhysicalObject2D.js","../../src/serialize/PhysicalObject3D.js","../../node_modules/mkdirp/index.js","../../src/lib/Scheduler.js","../../src/serialize/Serializer.js","../../src/network/NetworkedEventFactory.js","../../src/network/NetworkedEventCollection.js","../../src/network/NetworkTransmitter.js","../../src/network/NetworkMonitor.js","../../src/ServerEngine.js","../../src/lib/lib.js"],"sourcesContent":["import crypto from 'crypto';\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  return crypto.randomFillSync(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","/**\n * This class implements a singleton game world instance, created by Lance.\n * It represents an instance of the game world, and includes all the game objects.\n * It is the state of the game.\n */\nimport { v4 as uuidv4 } from 'uuid';\n\nclass GameWorld {\n\n    /**\n     * Constructor of the World instance.  Invoked by Lance on startup.\n     *\n     * @hideconstructor\n     */\n    constructor() {\n        this.stepCount = 0;\n        this.objects = {};\n        this.playerCount = 0;\n        this.idCount = 0;\n        this.groups = new Map()\n    }\n\n    get size() {\n        return Object.keys(this.objects).length\n    }\n\n    /**\n     * Gets a new, fresh and unused id that can be used for a new object\n     * @private\n     * @return {Number} the new id\n     */\n    getNewId() {\n        return uuidv4();\n    }\n\n    /**\n     * Returns all the game world objects which match a criteria\n     * @param {Object} query The query object\n     * @param {Object} [query.id] object id\n     * @param {Object} [query.playerId] player id\n     * @param {Class} [query.instanceType] matches whether `object instanceof instanceType`\n     * @param {Array} [query.components] An array of component names\n     * @param {Boolean} [query.returnSingle] Return the first object matched\n     * @return {Array | Object} All game objects which match all the query parameters, or the first match if returnSingle was specified\n     */\n    queryObjects(query) {\n        let queriedObjects = [];\n\n        // todo this is currently a somewhat inefficient implementation for API testing purposes.\n        // It should be implemented with cached dictionaries like in nano-ecs\n        this.forEachObject((id, object) => {\n            let conditions = [];\n\n            // object id condition\n            conditions.push(!('id' in query) || query.id !== null && object.id === query.id);\n\n            // player id condition\n            conditions.push(!('playerId' in query) || query.playerId !== null && object.playerId === query.playerId);\n\n            // instance type conditio\n            conditions.push(!('instanceType' in query) || query.instanceType !== null && object instanceof query.instanceType);\n\n            // components conditions\n            if ('components' in query) {\n                query.components.forEach(componentClass => {\n                    conditions.push(object.hasComponent(componentClass));\n                });\n            }\n\n            // all conditions are true, object is qualified for the query\n            if (conditions.every(value => value)) {\n                queriedObjects.push(object);\n                if (query.returnSingle) return false;\n            }\n        });\n\n        // return a single object or null\n        if (query.returnSingle) {\n            return queriedObjects.length > 0 ? queriedObjects[0] : null;\n        }\n\n        return queriedObjects;\n    }\n\n    /**\n     * Returns The first game object encountered which matches a criteria.\n     * Syntactic sugar for {@link queryObjects} with `returnSingle: true`\n     * @param {Object} query See queryObjects\n     * @return {Object} The game object, if found\n     */\n    queryObject(query) {\n        return this.queryObjects(Object.assign(query, {\n            returnSingle: true\n        }));\n    }\n\n    has(id) {\n        return !!this.objects[id]\n    }\n\n    getObject(id) {\n        if (typeof id != 'string') {\n            id = id.id\n        }\n        return this.objects[id]\n    }\n\n    getObjectsOfGroup(groupName) {\n        return this.groups.get(groupName).collections.map(id => this.getObject(id))\n    }\n\n    /**\n     * Add an object to the game world\n     * @private\n     * @param {Object} object object to add\n     */\n    addObject(object) {\n        this.objects[object.id] = object;\n    }\n\n    addObjectInGroup(object, groupName) {\n        if (!this.groups.has(groupName)) {\n            this.addGroup(groupName)\n        }\n        this.groups.get(groupName).collections.push(object.id)\n    }\n\n    /**\n     * Remove an object from the game world\n     * @private\n     * @param {number} id id of the object to remove\n     */\n    removeObject(id) {\n        const groupsDeleted = []\n        this.groups.forEach((group) => {\n            const isDeleted = this.removeObjectOfGroup(group.groupName, id)\n            if (isDeleted) groupsDeleted.push(group.groupName)\n        })\n        delete this.objects[id];\n        return groupsDeleted\n    }\n\n    /**\n     * World object iterator.\n     * Invoke callback(objId, obj) for each object\n     *\n     * @param {function} callback function receives id and object. If callback returns false, the iteration will cease\n     */\n    forEachObject(callback) {\n        for (let id of Object.keys(this.objects)) {\n            let returnValue = callback(id, this.objects[id]);  // TODO: the key should be Number(id)\n            if (returnValue === false) break;\n        }\n    }\n\n    forEach(callback) {\n        for (let id in this.objects) {\n            callback(this.objects[id], id)\n        }\n    }\n\n    addGroup(groupName, options = {}) {\n        if (this.groups.has(groupName)) {\n            const meta = this.groups.get(groupName)\n            this.groups.set(groupName, {\n                ...meta,\n                ...options\n            })\n        }\n        else {\n            this.groups.set(groupName, {\n                collections: [],\n                requestImmediateSync: false,\n                requestFullSync: false,\n                syncCounter: 0,\n                groupName,\n                ...options\n            })\n        }\n        if (this.onAddGroup) this.onAddGroup(groupName)\n    }\n\n    removeGroup(groupName) {\n        this.groups.delete(groupName)\n        if (this.onRemoveGroup) this.onRemoveGroup(groupName)\n    }\n\n    removeObjectOfGroup(groupName, id) {\n        const group = this.groups.get(groupName)\n        let isDeleted = false\n        const collections = group.collections.filter(objId => {\n            if (objId != id) {\n                return true\n            }\n            else {\n                isDeleted = true\n                return false\n            }\n        })\n        if (collections.length == 0) {\n            this.removeGroup(groupName)\n        }\n        else {\n            this.groups.set(groupName, {\n                ...group,\n                collections\n            }) \n        }\n        return isDeleted\n    }\n\n}\n\nexport default GameWorld;\n","\"use strict\";\n\n// ES3 safe\nvar _undefined = void 0;\n\nmodule.exports = function (value) { return value !== _undefined && value !== null; };\n","\"use strict\";\n\nvar isValue = require(\"../value/is\");\n\n// prettier-ignore\nvar possibleTypes = { \"object\": true, \"function\": true, \"undefined\": true /* document.all */ };\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\treturn hasOwnProperty.call(possibleTypes, typeof value);\n};\n","\"use strict\";\n\nvar isObject = require(\"../object/is\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) return false;\n\ttry {\n\t\tif (!value.constructor) return false;\n\t\treturn value.constructor.prototype === value;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isPrototype = require(\"../prototype/is\");\n\nmodule.exports = function (value) {\n\tif (typeof value !== \"function\") return false;\n\n\tif (!hasOwnProperty.call(value, \"length\")) return false;\n\n\ttry {\n\t\tif (typeof value.length !== \"number\") return false;\n\t\tif (typeof value.call !== \"function\") return false;\n\t\tif (typeof value.apply !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\treturn !isPrototype(value);\n};\n","\"use strict\";\n\nvar isFunction = require(\"../function/is\");\n\nvar classRe = /^\\s*class[\\s{/}]/, functionToString = Function.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isFunction(value)) return false;\n\tif (classRe.test(functionToString.call(value))) return false;\n\treturn true;\n};\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn (obj.foo + obj.bar + obj.trzy) === \"razdwatrzy\";\n};\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) {\n return (val !== _undefined) && (val !== null);\n};\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src /*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.assign\n\t: require(\"./shim\");\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1 /*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn (str.contains(\"dwa\") === true) && (str.contains(\"foo\") === false);\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? String.prototype.contains\n\t: require(\"./shim\");\n","\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n","// TODO: needs documentation\n// I think the API could be simpler\n//   - Timer.run(waitSteps, cb)\n//   - Timer.repeat(waitSteps, count, cb) // count=null=>forever\n//   - Timer.cancel(cb)\nexport default class Timer {\n\n    constructor() {\n        this.currentTime = 0;\n        this.isActive = false;\n        this.idCounter = 0;\n\n        this.events = {};\n    }\n\n    play() {\n        this.isActive = true;\n    }\n\n    tick() {\n        let event;\n        let eventId;\n\n        if (this.isActive) {\n            this.currentTime++;\n\n            for (eventId in this.events) {\n                event = this.events[eventId];\n                if (event) {\n\n                    if (event.type == 'repeat') {\n                        if ((this.currentTime - event.startOffset) % event.time == 0) {\n                            event.callback.apply(event.thisContext, event.args);\n                        }\n                    }\n                    if (event.type == 'single') {\n                        if ((this.currentTime - event.startOffset) % event.time == 0) {\n                            event.callback.apply(event.thisContext, event.args);\n                            event.destroy();\n                        }\n                    }\n\n                }\n\n            }\n        }\n    }\n\n    destroyEvent(eventId) {\n        delete this.events[eventId];\n    }\n\n    loop(time, callback) {\n        let timerEvent = new TimerEvent(this,\n            TimerEvent.TYPES.repeat,\n            time,\n            callback\n        );\n\n        this.events[timerEvent.id] = timerEvent;\n\n        return timerEvent;\n    }\n\n    add(time, callback, thisContext, args) {\n        let timerEvent = new TimerEvent(this,\n            TimerEvent.TYPES.single,\n            time,\n            callback,\n            thisContext,\n            args\n        );\n\n        this.events[timerEvent.id] = timerEvent;\n        return timerEvent;\n    }\n\n    // todo implement timer delete all events\n\n    destroy(id) {\n        delete this.events[id];\n    }\n}\n\n// timer event\nclass TimerEvent {\n    constructor(timer, type, time, callback, thisContext, args) {\n        this.id = ++timer.idCounter;\n        this.timer = timer;\n        this.type = type;\n        this.time = time;\n        this.callback = callback;\n        this.startOffset = timer.currentTime;\n        this.thisContext = thisContext;\n        this.args = args;\n\n        this.destroy = function() {\n            this.timer.destroy(this.id);\n        };\n    }\n}\n\nTimerEvent.TYPES = {\n    repeat: 'repeat',\n    single: 'single'\n};\n","/**\n * Tracing Services.\n * Use the trace functions to trace game state.  Turn on tracing by\n * specifying the minimum trace level which should be recorded.  For\n * example, setting traceLevel to Trace.TRACE_INFO will cause info,\n * warn, and error traces to be recorded.\n */\nclass Trace {\n\n    constructor(options) {\n\n        this.options = Object.assign({\n            traceLevel: this.TRACE_DEBUG\n        }, options);\n\n        this.traceBuffer = [];\n        this.step = 'initializing';\n\n        // syntactic sugar functions\n        this.error = this.trace.bind(this, Trace.TRACE_ERROR);\n        this.warn = this.trace.bind(this, Trace.TRACE_WARN);\n        this.info = this.trace.bind(this, Trace.TRACE_INFO);\n        this.debug = this.trace.bind(this, Trace.TRACE_DEBUG);\n        this.trace = this.trace.bind(this, Trace.TRACE_ALL);\n    }\n\n    /**\n     * Include all trace levels.\n     * @memberof Trace\n     * @member {Number} TRACE_ALL\n     */\n    static get TRACE_ALL() { return 0; }\n\n     /**\n      * Include debug traces and higher.\n      * @memberof Trace\n      * @member {Number} TRACE_DEBUG\n      */\n    static get TRACE_DEBUG() { return 1; }\n\n     /**\n      * Include info traces and higher.\n      * @memberof Trace\n      * @member {Number} TRACE_INFO\n      */\n    static get TRACE_INFO() { return 2; }\n\n     /**\n      * Include warn traces and higher.\n      * @memberof Trace\n      * @member {Number} TRACE_WARN\n      */\n    static get TRACE_WARN() { return 3; }\n\n     /**\n      * Include error traces and higher.\n      * @memberof Trace\n      * @member {Number} TRACE_ERROR\n      */\n    static get TRACE_ERROR() { return 4; }\n\n     /**\n      * Disable all tracing.\n      * @memberof Trace\n      * @member {Number} TRACE_NONE\n      */\n    static get TRACE_NONE() { return 1000; }\n\n    trace(level, dataCB) {\n\n         // all traces must be functions which return strings\n        if (typeof dataCB !== 'function') {\n            throw new Error(`Lance trace was called but instead of passing a function, it received a [${typeof dataCB}]`);\n        }\n\n        if (level < this.options.traceLevel)\n            return;\n\n        this.traceBuffer.push({ data: dataCB(), level, step: this.step, time: new Date() });\n    }\n\n    rotate() {\n        let buffer = this.traceBuffer;\n        this.traceBuffer = [];\n        return buffer;\n    }\n\n    get length() {\n        return this.traceBuffer.length;\n    }\n\n    setStep(s) {\n        this.step = s;\n    }\n}\n\nexport default Trace;\n","import GameWorld from './GameWorld';\nimport EventEmitter from 'event-emitter';\nimport Timer from './game/Timer';\nimport Trace from './lib/Trace';\n\n/**\n * The GameEngine contains the game logic.  Extend this class\n * to implement game mechanics.  The GameEngine derived\n * instance runs once on the server, where the final decisions\n * are always taken, and one instance will run on each client as well,\n * where the client emulates what it expects to be happening\n * on the server.\n *\n * The game engine's logic must listen to user inputs and\n * act on these inputs to change the game state.  For example,\n * the game engine listens to controller/keyboard inputs to infer\n * movement for the player/ship/first-person.  The game engine listens\n * to clicks, button-presses to infer firing, etc..\n *\n * Note that the game engine runs on both the server and on the\n * clients - but the server decisions always have the final say,\n * and therefore clients must resolve server updates which conflict\n * with client-side predictions.\n */\nclass GameEngine {\n\n    /**\n      * Create a game engine instance.  This needs to happen\n      * once on the server, and once on each client.\n      *\n      * @param {Object} options - options object\n      * @param {Number} options.traceLevel - the trace level.\n      */\n    constructor(options) {\n\n        // place the game engine in the LANCE globals\n        const isServerSide = (typeof window === 'undefined');\n        const glob = isServerSide ? global : window;\n        glob.LANCE = { gameEngine: this };\n\n        // set options\n        const defaultOpts = { traceLevel: Trace.TRACE_NONE };\n        if (!isServerSide) defaultOpts.clientIDSpace = 1000000;\n        this.options = Object.assign(defaultOpts, options);\n\n        /**\n         * client's player ID, as a string. If running on the client, this is set at runtime by the clientEngine\n         * @member {String}\n         */\n        this.playerId = NaN;\n\n        // set up event emitting and interface\n        let eventEmitter = this.options.eventEmitter;\n        if (typeof eventEmitter === 'undefined')\n            eventEmitter = new EventEmitter();\n\n        /**\n         * Register a handler for an event\n         *\n         * @method on\n         * @memberof GameEngine\n         * @instance\n         * @param {String} eventName - name of the event\n         * @param {Function} eventHandler - handler function\n         */\n        this.on = eventEmitter.on;\n\n        /**\n         * Register a handler for an event, called just once (if at all)\n         *\n         * @method once\n         * @memberof GameEngine\n         * @instance\n         * @param {String} eventName - name of the event\n         * @param {Function} eventHandler - handler function\n         */\n        this.once = eventEmitter.once;\n\n        /**\n         * Remove a handler\n         *\n         * @method removeListener\n         * @memberof GameEngine\n         * @instance\n         * @param {String} eventName - name of the event\n         * @param {Function} eventHandler - handler function\n         */\n        this.removeListener = eventEmitter.off;\n        this.off = eventEmitter.off;\n\n        this.emit = eventEmitter.emit;\n\n        // set up trace\n        this.trace = new Trace({ traceLevel: this.options.traceLevel });\n    }\n\n    findLocalShadow(serverObj) {\n\n        for (let localId of Object.keys(this.world.objects)) {\n            if (localId < this.options.clientIDSpace) continue;\n            let localObj = this.world.objects[localId];\n            if (localObj.hasOwnProperty('inputId') && localObj.inputId === serverObj.inputId)\n                return localObj;\n        }\n\n        return null;\n    }\n\n    initWorld(worldSettings) {\n\n        this.world = new GameWorld();\n\n        // on the client we have a different ID space\n        if (this.options.clientIDSpace) {\n            this.world.idCount = this.options.clientIDSpace;\n        }\n\n        /**\n        * The worldSettings defines the game world constants, such\n        * as width, height, depth, etc. such that all other classes\n        * can reference these values.\n        * @member {Object} worldSettings\n        * @memberof GameEngine\n        */\n        this.worldSettings = Object.assign({}, worldSettings);\n    }\n\n    /**\n      * Start the game. This method runs on both server\n      * and client. Extending the start method is useful\n      * for setting up the game's worldSettings attribute,\n      * and registering methods on the event handler.\n      */\n    start() {\n        this.trace.info(() => '========== game engine started ==========');\n        this.initWorld();\n\n        // create the default timer\n        this.timer = new Timer();\n        this.timer.play();\n        this.on('postStep', (step, isReenact) => {\n            if (!isReenact) this.timer.tick();\n        });\n\n        this.emit('start', { timestamp: (new Date()).getTime() });\n    }\n\n    /**\n      * Single game step.\n      *\n      * @param {Boolean} isReenact - is this step a re-enactment of the past.\n      * @param {Number} t - the current time (optional)\n      * @param {Number} dt - elapsed time since last step was called.  (optional)\n      * @param {Boolean} physicsOnly - do a physics step only, no game logic\n      */\n    step(isReenact, t, dt, physicsOnly) {\n        // physics-only step\n        if (physicsOnly) {\n            if (dt) dt /= 1000; // physics engines work in seconds\n            this.physicsEngine.step(dt, objectFilter);\n            return;\n        }\n\n        // emit preStep event\n        if (isReenact === undefined)\n            throw new Error('game engine does not forward argument isReenact to super class');\n\n        isReenact = Boolean(isReenact);\n        let step = ++this.world.stepCount;\n        let clientIDSpace = this.options.clientIDSpace;\n        this.emit('preStep', { step, isReenact, dt });\n\n        // skip physics for shadow objects during re-enactment\n        function objectFilter(o) {\n            return !isReenact || o.id < clientIDSpace;\n        }\n\n        // physics step\n        if (this.physicsEngine && !this.ignorePhysics) {\n            if (dt) dt /= 1000; // physics engines work in seconds\n            this.physicsEngine.step(dt, objectFilter);\n        }\n\n        // for each object\n        // - apply incremental bending\n        // - refresh object positions after physics\n        this.world.forEachObject((id, o) => {\n            if (typeof o.refreshFromPhysics === 'function')\n                o.refreshFromPhysics();\n            this.trace.trace(() => `object[${id}] after ${isReenact ? 'reenact' : 'step'} : ${o.toString()}`);\n        });\n\n        // emit postStep event\n        this.emit('postStep', { step, isReenact });\n    }\n\n    /**\n     * Add object to the game world.\n     * On the client side, the object may not be created, if the server copy\n     * of this object is already in the game world.  This could happen when the client\n     * is using delayed-input, and the RTT is very low.\n     *\n     * @param {Object} object - the object.\n     * @return {Object} the final object.\n     */\n    addObjectToWorld(object) {\n\n        // if we are asked to create a local shadow object\n        // the server copy may already have arrived.\n        if (object.id >= this.options.clientIDSpace) {\n            let serverCopyArrived = false;\n            this.world.forEachObject((id, o) => {\n                if (o.hasOwnProperty('inputId') && o.inputId === object.inputId) {\n                    serverCopyArrived = true;\n                    return false;\n                }\n            });\n            if (serverCopyArrived) {\n                this.trace.info(() => `========== shadow object NOT added ${object.toString()} ==========`);\n                return null;\n            }\n        }\n\n        this.world.addObject(object)\n\n        // tell the object to join the game, by creating\n        // its corresponding physical entities and renderer entities.\n        if (typeof object.onAddToWorld === 'function')\n            object.onAddToWorld(this);\n\n        this.emit('objectAdded', object);\n        this.trace.info(() => `========== object added ${object.toString()} ==========`);\n\n        return object;\n    }\n\n    /**\n     * Override this function to implement input handling.\n     * This method will be called on the specific client where the\n     * input was received, and will also be called on the server\n     * when the input reaches the server.  The client does not call this\n     * method directly, rather the client calls {@link ClientEngine#sendInput}\n     * so that the input is sent to both server and client, and so that\n     * the input is delayed artificially if so configured.\n     *\n     * The input is described by a short string, and is given an index.\n     * The index is used internally to keep track of inputs which have already been applied\n     * on the client during synchronization.  The input is also associated with\n     * the ID of a player.\n     *\n     * @param {Object} inputDesc - input descriptor object\n     * @param {String} inputDesc.input - describe the input (e.g. \"up\", \"down\", \"fire\")\n     * @param {Number} inputDesc.messageIndex - input identifier\n     * @param {Number} inputDesc.step - the step on which this input occurred\n     * @param {Number} playerId - the player ID\n     * @param {Boolean} isServer - indicate if this function is being called on the server side\n     */\n    processInput(inputDesc, playerId, isServer) {\n        this.trace.info(() => `game engine processing input[${inputDesc.messageIndex}] <${inputDesc.input}> from playerId ${playerId}`);\n    }\n\n    /**\n     * Remove an object from the game world.\n     *\n     * @param {Object|String} objectId - the object or object ID\n     */\n    removeObjectFromWorld(objectId) {\n\n        if (typeof objectId === 'object') objectId = objectId.id;\n        let object = this.world.objects[objectId];\n\n        if (!object) {\n            throw new Error(`Game attempted to remove a game object which doesn't (or never did) exist, id=${objectId}`);\n        }\n        this.trace.info(() => `========== destroying object ${object.toString()} ==========`);\n\n        /*if (typeof object.onRemoveFromWorld === 'function')\n            object.onRemoveFromWorld(this);\n\n        const groups = this.world.removeObject(objectId);\n        this.emit('objectDestroyed', { object, groups });*/\n        \n    }\n\n    /**\n     * Check if a given object is owned by the player on this client\n     *\n     * @param {Object} object the game object to check\n     * @return {Boolean} true if the game object is owned by the player on this client\n     */\n    isOwnedByPlayer(object) {\n        return (object.playerId == this.playerId);\n    }\n\n    /**\n     * Register Game Object Classes\n     *\n     * @example\n     * registerClasses(serializer) {\n     *   serializer.registerClass(Paddle);\n     *   serializer.registerClass(Ball);\n     * }\n     *\n     * @param {Serializer} serializer - the serializer\n     */\n    registerClasses(serializer) {\n    }\n\n    /**\n     * Decide whether the player game is over by returning an Object, need to be implemented\n     *\n     * @return {Object} truthful if the game is over for the player and the object is returned as GameOver data\n     */\n    getPlayerGameOverResult() {\n        return null;\n    }\n}\n\n/**\n * EVENTS\n */\n\n/**\n * Marks the beginning of a new game step\n *\n * @event GameEngine#preStep\n * @param {Number} stepNumber - the step number\n * @param {Boolean} isReenact - is this step a re-enactment\n */\n\n/**\n * Marks the end of a game step\n *\n * @event GameEngine#postStep\n * @param {Number} stepNumber - the step number\n * @param {Boolean} isReenact - is this step a re-enactment\n */\n\n/**\n * An object has been added to the world\n *\n * @event GameEngine#objectAdded\n * @param {Object} obj - the new object\n */\n\n/**\n * An object has been removed from the world\n *\n * @event GameEngine#objectDestroyed\n * @param {Object} obj - the object\n */\n\n/**\n * A player has joined\n *\n * @event GameEngine#playerJoined\n * @param {Number} joinTime - epoch of join time\n * @param {Object} playerDesc - player descriptor\n * @param {String} playerDesc.playerId - the player ID\n */\n\n/**\n * A player has left\n *\n * @event GameEngine#playerDisconnected\n * @param {Number} joinTime - epoch of join time\n * @param {Number} disconnectTime - epoch of disconnect time\n * @param {Object} playerDesc - player descriptor\n * @param {String} playerDesc.playerId - the player ID\n */\n\n/**\n * A player has joined on the server\n *\n * @event GameEngine#server__playerJoined\n * @param {Number} joinTime - epoch of join time\n * @param {Object} playerDesc - player descriptor\n * @param {String} playerDesc.playerId - the player ID\n */\n\n/**\n  * A player has left on the server\n  *\n  * @event GameEngine#server__playerDisconnected\n  * @param {Number} joinTime - epoch of join time\n  * @param {Number} disconnectTime - epoch of disconnect time\n  * @param {Object} playerDesc - player descriptor\n  * @param {String} playerDesc.playerId - the player ID\n  */\n\n/**\n * A synchronization update arrived from the server\n *\n * @event GameEngine#syncReceived\n * @param {Object} sync - the synchronization object\n */\n\n /**\n  * Marks the beginning of a game step on the client\n  *\n  * @event GameEngine#client__preStep\n  */\n\n /**\n  * Marks the end of a game step on the client\n  *\n  * @event GameEngine#client__postStep\n  */\n\n/**\n * An input needs to be handled.  Emitted just before the GameEngine\n * method processInput is invoked.\n *\n * @event GameEngine#processInput\n * @param {Object} input - input descriptor object\n * @param {String} input.input - describe the input (e.g. \"up\", \"down\", \"fire\")\n * @param {Number} input.messageIndex - input identifier\n * @param {Object} input.options - the object which was passed as SendInput's InputOptions parameter\n * @param {Number} input.step - input execution step\n * @param {Number} playerId - the player ID\n */\n\n/**\n * An input needs to be handled.\n * This event is emitted on the server only, just before the\n * general processInput event.\n *\n * @event GameEngine#server__processInput\n * @param {Object} input - input descriptor object\n * @param {String} input.input - describe the input (e.g. \"up\", \"down\", \"fire\")\n * @param {Number} input.messageIndex - input identifier\n * @param {Object} input.options - the object which was passed as SendInput's InputOptions parameter\n * @param {Number} input.step - input execution step\n * @param {Number} playerId - the player ID\n */\n\n /**\n  * Client moved from one room to another\n  *\n  * @event GameEngine#server__roomUpdate\n  * @param {Number} playerId - the player ID\n  * @param {String} from - the room from which the client came\n  * @param {String} to - the room to which the client went\n  */\n\n/**\n * An input needs to be handled.\n * This event is emitted on the client only, just before the\n * general processInput event.\n *\n * @event GameEngine#client__processInput\n * @param {Object} input - input descriptor object\n * @param {String} input.input - describe the input (e.g. \"up\", \"down\", \"fire\")\n * @param {Number} input.messageIndex - input identifier\n * @param {Object} input.options - the object which was passed as SendInput's InputOptions parameter\n * @param {Number} input.step - input execution step\n * @param {Number} playerId - the player ID\n */\n\n/**\n * Client received a sync from the server\n *\n * @event GameEngine#client__syncReceived\n * @param {Object} sync - sync from the server\n * @param {Array} syncEvents - array of events in the sync\n * @param {Number} maxStepCount - highest step in the sync\n */\n\n /**\n  * Client moved from one room to another\n  *\n  * @event GameEngine#client__roomUpdate\n  * @param {Number} playerId - the player ID\n  * @param {String} from - the room from which the client came\n  * @param {String} to - the room to which the client went\n  */\n\n /**\n  * Client reset the world step\n  *\n  * @event GameEngine#client__stepReset\n  * @param {Object} resetDesc - sync from the server\n  * @param {Number} oldStep - the old step count\n  * @param {Number} newStep - the new step count\n  */\n\n/**\n * Marks the beginning of a game step on the server\n *\n * @event GameEngine#server__preStep\n * @param {Number} stepNumber - the step number\n */\n\n/**\n * Marks the end of a game step on the server\n *\n * @event GameEngine#server__postStep\n * @param {Number} stepNumber - the step number\n */\n\n/**\n * User input received on the server\n *\n * @event GameEngine#server__inputReceived\n * @param {Object} input - input descriptor\n * @param {Object} input.data - input descriptor\n * @param {String} input.playerId - player that sent the input\n */\n\n /**\n  * Report slow frame rate on the browser.\n  * The browser did not achieve a reasonable frame rate\n  *\n  * @event GameEngine#client__slowFrameRate\n  */\n\n  /**\n   * server has started\n   *\n   * @event GameEngine#start\n   * @param {Number} timestamp - UTC epoch of start time\n   */\n\n// TODO: the declaration \"export default\" could be done as part of the class\n// declaration up above, but the current version of jsdoc doesn't support this.\n// when jsdoc is fixed, move this descriptor back to the class declaration,\n// in all relevant files (12 files)\n// see: https://github.com/jsdoc3/jsdoc/issues/1132\nexport default GameEngine;\n","// The base Physics Engine class defines the expected interface\n// for all physics engines\nexport default class PhysicsEngine {\n\n    constructor(options) {\n        this.options = options;\n        this.gameEngine = options.gameEngine;\n\n        if (!options.gameEngine) {\n            console.warn('Physics engine initialized without gameEngine!');\n        }\n    }\n\n    /**\n     * A single Physics step.\n     *\n     * @param {Number} dt - time elapsed since last step\n     * @param {Function} objectFilter - a test function which filters which objects should move\n     */\n    step(dt, objectFilter) {}\n\n}\n","export default class Utils {\n\n    static hashStr(str, bits) {\n        let hash = 5381;\n        let i = str.length;\n        bits = bits ? bits : 8;\n\n        while (i) {\n            hash = (hash * 33) ^ str.charCodeAt(--i);\n        }\n        hash = hash >>> 0;\n        hash = hash % (Math.pow(2, bits) - 1);\n\n        // JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n        // integers. Since we want the results to be always positive, convert the\n        // signed int to an unsigned by doing an unsigned bitshift. */\n        return hash;\n    }\n\n    static arrayBuffersEqual(buf1, buf2) {\n        if (buf1.byteLength !== buf2.byteLength) return false;\n        let dv1 = new Int8Array(buf1);\n        let dv2 = new Int8Array(buf2);\n        for (let i = 0; i !== buf1.byteLength; i++) {\n            if (dv1[i] !== dv2[i]) return false;\n        }\n        return true;\n    }\n\n    static httpGetPromise(url) {\n        return new Promise((resolve, reject) => {\n            let req = new XMLHttpRequest();\n            req.open('GET', url, true);\n            req.onload = () => {\n                if (req.status >= 200 && req.status < 400) resolve(JSON.parse(req.responseText));\n                else reject();\n            };\n            req.onerror = () => {};\n            req.send();\n        });\n    }\n\n    static generateUID() {\n        var firstPart = (Math.random() * 46656) | 0;\n        var secondPart = (Math.random() * 46656) | 0;\n        firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\n        secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\n        return firstPart + secondPart;\n    }\n}","\n/**\n * The BaseTypes class defines the base types used in Lance.\n * These are the types which can be used to define an object's netscheme attributes,\n * which can be serialized by lance.\n * @example\n *     static get netScheme() {\n *       return {\n *             strength: { type: BaseTypes.TYPES.FLOAT32 },\n *             shield: { type: BaseTypes.TYPES.INT8 },\n *             name: { type: BaseTypes.TYPES.STRING },\n *             backpack: { type: BaseTypes.TYPES.CLASSINSTANCE },\n *             coins: {\n *                 type: BaseTypes.TYPES.LIST,\n *                 itemType: BaseTypes.TYPES.UINT8\n *             }\n *         };\n *     }\n */\nclass BaseTypes {}\n\n/**\n * @type {object}\n * @property {string} FLOAT32 Seriablizable float\n * @property {string} INT32 Seriablizable 32-bit integer\n * @property {string} INT16 Seriablizable 16-bit integer\n * @property {string} INT8 Seriablizable 8-bit integer\n * @property {string} UINT8 Seriablizable unsigned 8-bit integer\n * @property {string} STRING Seriablizable string\n * @property {string} CLASSINSTANCE Seriablizable class. Make sure you register all the classes included in this way.\n * @property {string} LIST Seriablizable list.  In the netScheme definition, if an attribute is defined as a list, the itemType should also be defined.\n */\nBaseTypes.TYPES = {\n\n  /**\n   * Seriablizable float\n   * @alias TYPES.FLOAT32\n   * @memberof! BaseTypes#\n   */\n    FLOAT32: 'FLOAT32',\n\n    /**\n     * Seriablizable 32-bit int\n     * @alias TYPES.INT32\n     * @memberof! BaseTypes#\n     */\n    INT32: 'INT32',\n\n    /**\n     * Seriablizable 16-bit int\n     * @alias TYPES.INT16\n     * @memberof! BaseTypes#\n     */\n    INT16: 'INT16',\n\n    /**\n     * Seriablizable 8-bit int\n     * @alias TYPES.INT8\n     * @memberof! BaseTypes#\n     */\n    INT8: 'INT8',\n\n    /**\n     * Seriablizable unsigned 8-bit int\n     * @alias TYPES.UINT8\n     * @memberof! BaseTypes#\n     */\n    UINT8: 'UINT8',\n\n    /**\n     * Seriablizable string\n     * @alias TYPES.STRING\n     * @memberof! BaseTypes#\n     */\n    STRING: 'STRING',\n\n    /**\n     * Seriablizable class.  Make sure you registered the classes included in this way.\n     * @alias TYPES.CLASSINSTANCE\n     * @memberof! BaseTypes#\n     */\n    CLASSINSTANCE: 'CLASSINSTANCE',\n\n    /**\n     * Seriablizable list.\n     * @alias TYPES.LIST\n     * @memberof! BaseTypes#\n     */\n    LIST: 'LIST'\n};\n\nexport default BaseTypes;\n","import Utils from './../lib/Utils';\nimport BaseTypes from './BaseTypes';\n\nclass Serializable {\n    /**\n     *  Class can be serialized using either:\n     * - a class based netScheme\n     * - an instance based netScheme\n     * - completely dynamically (not implemented yet)\n     *\n     * @param {Object} serializer - Serializer instance\n     * @param {Object} [options] - Options object\n     * @param {Object} options.dataBuffer [optional] - Data buffer to write to. If null a new data buffer will be created\n     * @param {Number} options.bufferOffset [optional] - The buffer data offset to start writing at. Default: 0\n     * @param {String} options.dry [optional] - Does not actually write to the buffer (useful to gather serializeable size)\n     * @return {Object} the serialized object.  Contains attributes: dataBuffer - buffer which contains the serialized data;  bufferOffset - offset where the serialized data starts.\n     */\n\n    serialize(serializer, options) {\n        options = Object.assign({\n            bufferOffset: 0\n        }, options);\n\n        let netScheme;\n        let dataBuffer;\n        let dataView;\n        let classId = 0;\n        let bufferOffset = options.bufferOffset;\n        let localBufferOffset = 0; // used for counting the bufferOffset\n\n        // instance classId\n        if (this.classId) {\n            classId = this.classId;\n        } else {\n            classId = Utils.hashStr(this.constructor.name);\n        }\n\n        // instance netScheme\n        if (this.netScheme) {\n            netScheme = this.netScheme;\n        } else if (this.constructor.netScheme) {\n            netScheme = this.constructor.netScheme;\n        } else {\n            // todo define behaviour when a netScheme is undefined\n            console.warn('no netScheme defined! This will result in awful performance');\n        }\n\n        // TODO: currently we serialize every node twice, once to calculate the size\n        //       of the buffers and once to write them out.  This can be reduced to\n        //       a single pass by starting with a large (and static) ArrayBuffer and\n        //       recursively building it up.\n        // buffer has one Uint8Array for class id, then payload\n        if (options.dataBuffer == null && options.dry != true) {\n            let bufferSize = this.serialize(serializer, { dry: true }).bufferOffset;\n            dataBuffer = new ArrayBuffer(bufferSize);\n        } else {\n            dataBuffer = options.dataBuffer;\n        }\n\n        if (options.dry != true) {\n            dataView = new DataView(dataBuffer);\n            // first set the id of the class, so that the deserializer can fetch information about it\n            dataView.setUint8(bufferOffset + localBufferOffset, classId);\n        }\n\n        // advance the offset counter\n        localBufferOffset += Uint8Array.BYTES_PER_ELEMENT;\n\n        if (netScheme) {\n            for (let property of Object.keys(netScheme).sort()) {\n\n                // write the property to buffer\n                if (options.dry != true) {\n                    serializer.writeDataView(dataView, this[property], bufferOffset + localBufferOffset, netScheme[property]);\n                }\n\n                if (netScheme[property].type === BaseTypes.TYPES.STRING) {\n                    // derive the size of the string\n                    localBufferOffset += Uint16Array.BYTES_PER_ELEMENT;\n                    if (this[property] !== null && this[property] !== undefined)\n                        localBufferOffset += this[property].length * Uint16Array.BYTES_PER_ELEMENT;\n                } else if (netScheme[property].type === BaseTypes.TYPES.CLASSINSTANCE) {\n                    // derive the size of the included class\n                    let objectInstanceBufferOffset = this[property].serialize(serializer, { dry: true }).bufferOffset;\n                    localBufferOffset += objectInstanceBufferOffset;\n                } else if (netScheme[property].type === BaseTypes.TYPES.LIST) {\n                    // derive the size of the list\n                    // list starts with number of elements\n                    localBufferOffset += Uint16Array.BYTES_PER_ELEMENT;\n\n                    for (let item of this[property]) {\n                        // todo inelegant, currently doesn't support list of lists\n                        if (netScheme[property].itemType === BaseTypes.TYPES.CLASSINSTANCE) {\n                            let listBufferOffset = item.serialize(serializer, { dry: true }).bufferOffset;\n                            localBufferOffset += listBufferOffset;\n                        } else if (netScheme[property].itemType === BaseTypes.TYPES.STRING) {\n                            // size includes string length plus double-byte characters\n                            localBufferOffset += Uint16Array.BYTES_PER_ELEMENT * (1 + item.length);\n                        } else {\n                            localBufferOffset += serializer.getTypeByteSize(netScheme[property].itemType);\n                        }\n                    }\n                } else {\n                    // advance offset\n                    localBufferOffset += serializer.getTypeByteSize(netScheme[property].type);\n                }\n\n            }\n        } else {\n            // TODO no netScheme, dynamic class\n        }\n\n        return { dataBuffer, bufferOffset: localBufferOffset };\n    }\n\n    // build a clone of this object with pruned strings (if necessary)\n    prunedStringsClone(serializer, prevObject) {\n\n        if (!prevObject) return this;\n        prevObject = serializer.deserialize(prevObject).obj;\n\n        // get list of string properties which changed\n        let netScheme = this.constructor.netScheme;\n        let isString = p => netScheme[p].type === BaseTypes.TYPES.STRING;\n        let hasChanged = p => prevObject[p] !== this[p];\n        let changedStrings = Object.keys(netScheme).filter(isString).filter(hasChanged);\n        if (changedStrings.length == 0) return this;\n\n        // build a clone with pruned strings\n        let prunedCopy = new this.constructor(null, { id: null });\n        for (let p of Object.keys(netScheme))\n            prunedCopy[p] = changedStrings.indexOf(p) < 0 ? this[p] : null;\n\n        return prunedCopy;\n    }\n\n    syncTo(other) {\n        let netScheme = this.constructor.netScheme;\n        for (let p of Object.keys(netScheme)) {\n\n            // ignore classes and lists\n            if (netScheme[p].type === BaseTypes.TYPES.LIST || netScheme[p].type === BaseTypes.TYPES.CLASSINSTANCE)\n                continue;\n\n            // strings might be pruned\n            if (netScheme[p].type === BaseTypes.TYPES.STRING) {\n                if (typeof other[p] === 'string') this[p] = other[p];\n                continue;\n            }\n\n            // all other values are copied\n            this[p] = other[p];\n        }\n    }\n\n}\n\nexport default Serializable;\n","import Serializable from './Serializable';\nimport BaseTypes from './BaseTypes';\n\n/**\n * A TwoVector is a geometric object which is completely described\n * by two values.\n */\nclass TwoVector extends Serializable {\n\n    static get netScheme() {\n        return {\n            x: { type: BaseTypes.TYPES.FLOAT32 },\n            y: { type: BaseTypes.TYPES.FLOAT32 }\n        };\n    }\n\n    /**\n    * Creates an instance of a TwoVector.\n    * @param {Number} x - first value\n    * @param {Number} y - second value\n    * @return {TwoVector} v - the new TwoVector\n    */\n    constructor(x, y) {\n        super();\n        this.x = x;\n        this.y = y;\n\n        return this;\n    }\n\n    /**\n     * Formatted textual description of the TwoVector.\n     * @return {String} description\n     */\n    toString() {\n        function round3(x) { return Math.round(x * 1000) / 1000; }\n        return `[${round3(this.x)}, ${round3(this.y)}]`;\n    }\n\n    /**\n     * Set TwoVector values\n     *\n     * @param {Number} x x-value\n     * @param {Number} y y-value\n     * @return {TwoVector} returns self\n     */\n    set(x, y) {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    multiply(other) {\n        this.x *= other.x;\n        this.y *= other.y;\n\n        return this;\n    }\n\n    /**\n     * Multiply this TwoVector by a scalar\n     *\n     * @param {Number} s the scale\n     * @return {TwoVector} returns self\n     */\n    multiplyScalar(s) {\n        this.x *= s;\n        this.y *= s;\n\n        return this;\n    }\n\n    /**\n     * Add other vector to this vector\n     *\n     * @param {TwoVector} other the other vector\n     * @return {TwoVector} returns self\n     */\n    add(other) {\n        this.x += other.x;\n        this.y += other.y;\n\n        return this;\n    }\n\n    /**\n     * Subtract other vector to this vector\n     *\n     * @param {TwoVector} other the other vector\n     * @return {TwoVector} returns self\n     */\n    subtract(other) {\n        this.x -= other.x;\n        this.y -= other.y;\n\n        return this;\n    }\n\n    /**\n     * Get vector length\n     *\n     * @return {Number} length of this vector\n     */\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    /**\n     * Normalize this vector, in-place\n     *\n     * @return {TwoVector} returns self\n     */\n    normalize() {\n        this.multiplyScalar(1 / this.length());\n        return this;\n    }\n\n    /**\n     * Copy values from another TwoVector into this TwoVector\n     *\n     * @param {TwoVector} sourceObj the other vector\n     * @return {TwoVector} returns self\n     */\n    copy(sourceObj) {\n        this.x = sourceObj.x;\n        this.y = sourceObj.y;\n\n        return this;\n    }\n\n    /**\n     * Create a clone of this vector\n     *\n     * @return {TwoVector} returns clone\n     */\n    clone() {\n        return new TwoVector(this.x, this.y);\n    }\n\n    /**\n     * Apply in-place lerp (linear interpolation) to this TwoVector\n     * towards another TwoVector\n     * @param {TwoVector} target the target vector\n     * @param {Number} p The percentage to interpolate\n     * @return {TwoVector} returns self\n     */\n    lerp(target, p) {\n        this.x += (target.x - this.x) * p;\n        this.y += (target.y - this.y) * p;\n\n        return this;\n    }\n\n    /**\n     * Get bending Delta Vector\n     * towards another TwoVector\n     * @param {TwoVector} target the target vector\n     * @param {Object} options bending options\n     * @param {Number} options.increments number of increments\n     * @param {Number} options.percent The percentage to bend\n     * @param {Number} options.min No less than this value\n     * @param {Number} options.max No more than this value\n     * @return {TwoVector} returns new Incremental Vector\n     */\n    getBendingDelta(target, options) {\n        let increment = target.clone();\n        increment.subtract(this);\n        increment.multiplyScalar(options.percent);\n\n        // check for max case\n        if (((typeof options.max === 'number') && increment.length() > options.max) ||\n            ((typeof options.min === 'number') && increment.length() < options.min)) {\n            return new TwoVector(0, 0);\n        }\n\n        // divide into increments\n        increment.multiplyScalar(1 / options.increments);\n\n        return increment;\n    }\n}\n\nexport default TwoVector;\n","// Hierarchical Spatial Hash Grid: HSHG\n// source: https://gist.github.com/kirbysayshi/1760774\n\n// ---------------------------------------------------------------------\n// GLOBAL FUNCTIONS\n// ---------------------------------------------------------------------\n\n/**\n * Updates every object's position in the grid, but only if\n * the hash value for that object has changed.\n * This method DOES NOT take into account object expansion or\n * contraction, just position, and does not attempt to change\n * the grid the object is currently in; it only (possibly) changes\n * the cell.\n *\n * If the object has significantly changed in size, the best bet is to\n * call removeObject() and addObject() sequentially, outside of the\n * normal update cycle of HSHG.\n *\n * @return  void   desc\n */\nfunction update_RECOMPUTE() {\n\n    var i,\n        obj,\n        grid,\n        meta,\n        objAABB,\n        newObjHash;\n\n    // for each object\n    for (i = 0; i < this._globalObjects.length; i++) {\n        obj = this._globalObjects[i];\n        meta = obj.HSHG;\n        grid = meta.grid;\n\n        // recompute hash\n        objAABB = obj.getAABB();\n        newObjHash = grid.toHash(objAABB.min[0], objAABB.min[1]);\n\n        if (newObjHash !== meta.hash) {\n            // grid position has changed, update!\n            grid.removeObject(obj);\n            grid.addObject(obj, newObjHash);\n        }\n    }\n}\n\n// not implemented yet :)\nfunction update_REMOVEALL() {\n\n}\n\nfunction testAABBOverlap(objA, objB) {\n    var a = objA.getAABB(),\n        b = objB.getAABB();\n\n    // if(a.min[0] > b.max[0] || a.min[1] > b.max[1] || a.min[2] > b.max[2]\n    // || a.max[0] < b.min[0] || a.max[1] < b.min[1] || a.max[2] < b.min[2]){\n\n    if (a.min[0] > b.max[0] || a.min[1] > b.max[1] ||\n        a.max[0] < b.min[0] || a.max[1] < b.min[1]) {\n        return false;\n    }\n    return true;\n\n}\n\nfunction getLongestAABBEdge(min, max) {\n    return Math.max(\n        Math.abs(max[0] - min[0])\n        , Math.abs(max[1] - min[1])\n        // ,Math.abs(max[2] - min[2])\n    );\n}\n\n// ---------------------------------------------------------------------\n// ENTITIES\n// ---------------------------------------------------------------------\n\nfunction HSHG() {\n\n    this.MAX_OBJECT_CELL_DENSITY = 1 / 8; // objects / cells\n    this.INITIAL_GRID_LENGTH = 256; // 16x16\n    this.HIERARCHY_FACTOR = 2;\n    this.HIERARCHY_FACTOR_SQRT = Math.SQRT2;\n    this.UPDATE_METHOD = update_RECOMPUTE; // or update_REMOVEALL\n\n    this._grids = [];\n    this._globalObjects = [];\n}\n\n// HSHG.prototype.init = function(){\n//\tthis._grids = [];\n//\tthis._globalObjects = [];\n// }\n\nHSHG.prototype.addObject = function (obj) {\n    var x, i,\n        cellSize,\n        objAABB = obj.getAABB(),\n        objSize = getLongestAABBEdge(objAABB.min, objAABB.max),\n        oneGrid, newGrid;\n\n    // for HSHG metadata\n    obj.HSHG = {\n        globalObjectsIndex: this._globalObjects.length\n    };\n\n    // add to global object array\n    this._globalObjects.push(obj);\n\n    if (this._grids.length == 0) {\n        // no grids exist yet\n        cellSize = objSize * this.HIERARCHY_FACTOR_SQRT;\n        newGrid = new Grid(cellSize, this.INITIAL_GRID_LENGTH, this);\n        newGrid.initCells();\n        newGrid.addObject(obj);\n\n        this._grids.push(newGrid);\n    } else {\n        x = 0;\n\n        // grids are sorted by cellSize, smallest to largest\n        for (i = 0; i < this._grids.length; i++) {\n            oneGrid = this._grids[i];\n            x = oneGrid.cellSize;\n            if (objSize < x) {\n                x /= this.HIERARCHY_FACTOR;\n                if (objSize < x) {\n                    // find appropriate size\n                    while (objSize < x) {\n                        x /= this.HIERARCHY_FACTOR;\n                    }\n                    newGrid = new Grid(x * this.HIERARCHY_FACTOR, this.INITIAL_GRID_LENGTH, this);\n                    newGrid.initCells();\n                    // assign obj to grid\n                    newGrid.addObject(obj);\n                    // insert grid into list of grids directly before oneGrid\n                    this._grids.splice(i, 0, newGrid);\n                } else {\n                    // insert obj into grid oneGrid\n                    oneGrid.addObject(obj);\n                }\n                return;\n            }\n        }\n\n        while (objSize >= x) {\n            x *= this.HIERARCHY_FACTOR;\n        }\n\n        newGrid = new Grid(x, this.INITIAL_GRID_LENGTH, this);\n        newGrid.initCells();\n        // insert obj into grid\n        newGrid.addObject(obj);\n        // add newGrid as last element in grid list\n        this._grids.push(newGrid);\n    }\n};\n\nHSHG.prototype.removeObject = function (obj) {\n    var meta = obj.HSHG,\n        globalObjectsIndex,\n        replacementObj;\n\n    if (meta === undefined) {\n        throw Error(obj + ' was not in the HSHG.');\n        return;\n    }\n\n    // remove object from global object list\n    globalObjectsIndex = meta.globalObjectsIndex;\n    if (globalObjectsIndex === this._globalObjects.length - 1) {\n        this._globalObjects.pop();\n    } else {\n        replacementObj = this._globalObjects.pop();\n        replacementObj.HSHG.globalObjectsIndex = globalObjectsIndex;\n        this._globalObjects[globalObjectsIndex] = replacementObj;\n    }\n\n    meta.grid.removeObject(obj);\n\n    // remove meta data\n    delete obj.HSHG;\n};\n\nHSHG.prototype.update = function () {\n    this.UPDATE_METHOD.call(this);\n};\n\nHSHG.prototype.queryForCollisionPairs = function (broadOverlapTestCallback) {\n\n    var i, j, k, l, c,\n        grid,\n        cell,\n        objA,\n        objB,\n        offset,\n        adjacentCell,\n        biggerGrid,\n        objAAABB,\n        objAHashInBiggerGrid,\n        possibleCollisions = [];\n\n    // default broad test to internal aabb overlap test\n    let broadOverlapTest = broadOverlapTestCallback || testAABBOverlap;\n\n    // for all grids ordered by cell size ASC\n    for (i = 0; i < this._grids.length; i++) {\n        grid = this._grids[i];\n\n        // for each cell of the grid that is occupied\n        for (j = 0; j < grid.occupiedCells.length; j++) {\n            cell = grid.occupiedCells[j];\n\n            // collide all objects within the occupied cell\n            for (k = 0; k < cell.objectContainer.length; k++) {\n                objA = cell.objectContainer[k];\n                for (l = k + 1; l < cell.objectContainer.length; l++) {\n                    objB = cell.objectContainer[l];\n                    if (broadOverlapTest(objA, objB) === true) {\n                        possibleCollisions.push([objA, objB]);\n                    }\n                }\n            }\n\n            // for the first half of all adjacent cells (offset 4 is the current cell)\n            for (c = 0; c < 4; c++) {\n                offset = cell.neighborOffsetArray[c];\n\n                // if(offset === null) { continue; }\n\n                adjacentCell = grid.allCells[cell.allCellsIndex + offset];\n\n                // collide all objects in cell with adjacent cell\n                for (k = 0; k < cell.objectContainer.length; k++) {\n                    objA = cell.objectContainer[k];\n                    for (l = 0; l < adjacentCell.objectContainer.length; l++) {\n                        objB = adjacentCell.objectContainer[l];\n                        if (broadOverlapTest(objA, objB) === true) {\n                            possibleCollisions.push([objA, objB]);\n                        }\n                    }\n                }\n            }\n        }\n\n        // forall objects that are stored in this grid\n        for (j = 0; j < grid.allObjects.length; j++) {\n            objA = grid.allObjects[j];\n            objAAABB = objA.getAABB();\n\n            // for all grids with cellsize larger than grid\n            for (k = i + 1; k < this._grids.length; k++) {\n                biggerGrid = this._grids[k];\n                objAHashInBiggerGrid = biggerGrid.toHash(objAAABB.min[0], objAAABB.min[1]);\n                cell = biggerGrid.allCells[objAHashInBiggerGrid];\n\n                // check objA against every object in all cells in offset array of cell\n                // for all adjacent cells...\n                for (c = 0; c < cell.neighborOffsetArray.length; c++) {\n                    offset = cell.neighborOffsetArray[c];\n\n                    // if(offset === null) { continue; }\n\n                    adjacentCell = biggerGrid.allCells[cell.allCellsIndex + offset];\n\n                    // for all objects in the adjacent cell...\n                    for (l = 0; l < adjacentCell.objectContainer.length; l++) {\n                        objB = adjacentCell.objectContainer[l];\n                        // test against object A\n                        if (broadOverlapTest(objA, objB) === true) {\n                            possibleCollisions.push([objA, objB]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // return list of object pairs\n    return possibleCollisions;\n};\n\nHSHG.update_RECOMPUTE = update_RECOMPUTE;\nHSHG.update_REMOVEALL = update_REMOVEALL;\n\n/**\n * Grid\n *\n * @constructor\n * @param    int cellSize  the pixel size of each cell of the grid\n * @param    int cellCount  the total number of cells for the grid (width x height)\n * @param    HSHG parentHierarchy    the HSHG to which this grid belongs\n * @return  void\n */\nfunction Grid(cellSize, cellCount, parentHierarchy) {\n    this.cellSize = cellSize;\n    this.inverseCellSize = 1 / cellSize;\n    this.rowColumnCount = ~~Math.sqrt(cellCount);\n    this.xyHashMask = this.rowColumnCount - 1;\n    this.occupiedCells = [];\n    this.allCells = Array(this.rowColumnCount * this.rowColumnCount);\n    this.allObjects = [];\n    this.sharedInnerOffsets = [];\n\n    this._parentHierarchy = parentHierarchy || null;\n}\n\nGrid.prototype.initCells = function () {\n\n    // TODO: inner/unique offset rows 0 and 2 may need to be\n    // swapped due to +y being \"down\" vs \"up\"\n\n    var i,\n        gridLength = this.allCells.length,\n        x, y,\n        wh = this.rowColumnCount,\n        isOnRightEdge, isOnLeftEdge, isOnTopEdge, isOnBottomEdge,\n        innerOffsets = [\n            // y+ down offsets\n            // -1 + -wh, -wh, -wh + 1,\n            // -1, 0, 1,\n            // wh - 1, wh, wh + 1\n\n            // y+ up offsets\n            wh - 1, wh, wh + 1,\n            -1, 0, 1,\n            -1 + -wh, -wh, -wh + 1\n        ],\n        leftOffset, rightOffset, topOffset, bottomOffset,\n        uniqueOffsets = [],\n        cell;\n\n    this.sharedInnerOffsets = innerOffsets;\n\n    // init all cells, creating offset arrays as needed\n\n    for (i = 0; i < gridLength; i++) {\n\n        cell = new Cell();\n        // compute row (y) and column (x) for an index\n        y = ~~(i / this.rowColumnCount);\n        x = ~~(i - (y * this.rowColumnCount));\n\n        // reset / init\n        isOnRightEdge = false;\n        isOnLeftEdge = false;\n        isOnTopEdge = false;\n        isOnBottomEdge = false;\n\n        // right or left edge cell\n        if ((x + 1) % this.rowColumnCount == 0) {\n            isOnRightEdge = true;\n        } else if (x % this.rowColumnCount == 0) {\n            isOnLeftEdge = true;\n        }\n\n        // top or bottom edge cell\n        if ((y + 1) % this.rowColumnCount == 0) {\n            isOnTopEdge = true;\n        } else if (y % this.rowColumnCount == 0) {\n            isOnBottomEdge = true;\n        }\n\n        // if cell is edge cell, use unique offsets, otherwise use inner offsets\n        if (isOnRightEdge || isOnLeftEdge || isOnTopEdge || isOnBottomEdge) {\n\n            // figure out cardinal offsets first\n            rightOffset = isOnRightEdge === true ? -wh + 1 : 1;\n            leftOffset = isOnLeftEdge === true ? wh - 1 : -1;\n            topOffset = isOnTopEdge === true ? -gridLength + wh : wh;\n            bottomOffset = isOnBottomEdge === true ? gridLength - wh : -wh;\n\n            // diagonals are composites of the cardinals\n            uniqueOffsets = [\n                // y+ down offset\n                // leftOffset + bottomOffset, bottomOffset, rightOffset + bottomOffset,\n                // leftOffset, 0, rightOffset,\n                // leftOffset + topOffset, topOffset, rightOffset + topOffset\n\n                // y+ up offset\n                leftOffset + topOffset, topOffset, rightOffset + topOffset,\n                leftOffset, 0, rightOffset,\n                leftOffset + bottomOffset, bottomOffset, rightOffset + bottomOffset\n            ];\n\n            cell.neighborOffsetArray = uniqueOffsets;\n        } else {\n            cell.neighborOffsetArray = this.sharedInnerOffsets;\n        }\n\n        cell.allCellsIndex = i;\n        this.allCells[i] = cell;\n    }\n};\n\nGrid.prototype.toHash = function (x, y, z) {\n    var i, xHash, yHash, zHash;\n\n    if (x < 0) {\n        i = (-x) * this.inverseCellSize;\n        xHash = this.rowColumnCount - 1 - (~~i & this.xyHashMask);\n    } else {\n        i = x * this.inverseCellSize;\n        xHash = ~~i & this.xyHashMask;\n    }\n\n    if (y < 0) {\n        i = (-y) * this.inverseCellSize;\n        yHash = this.rowColumnCount - 1 - (~~i & this.xyHashMask);\n    } else {\n        i = y * this.inverseCellSize;\n        yHash = ~~i & this.xyHashMask;\n    }\n\n    // if(z < 0){\n    //\ti = (-z) * this.inverseCellSize;\n    //\tzHash = this.rowColumnCount - 1 - ( ~~i & this.xyHashMask );\n    // } else {\n    //\ti = z * this.inverseCellSize;\n    //\tzHash = ~~i & this.xyHashMask;\n    // }\n\n    return xHash + yHash * this.rowColumnCount;\n    // + zHash * this.rowColumnCount * this.rowColumnCount;\n};\n\nGrid.prototype.addObject = function (obj, hash) {\n    var objAABB,\n        objHash,\n        targetCell;\n\n    // technically, passing this in this should save some computational effort when updating objects\n    if (hash !== undefined) {\n        objHash = hash;\n    } else {\n        objAABB = obj.getAABB();\n        objHash = this.toHash(objAABB.min[0], objAABB.min[1]);\n    }\n    targetCell = this.allCells[objHash];\n\n    if (targetCell.objectContainer.length === 0) {\n        // insert this cell into occupied cells list\n        targetCell.occupiedCellsIndex = this.occupiedCells.length;\n        this.occupiedCells.push(targetCell);\n    }\n\n    // add meta data to obj, for fast update/removal\n    obj.HSHG.objectContainerIndex = targetCell.objectContainer.length;\n    obj.HSHG.hash = objHash;\n    obj.HSHG.grid = this;\n    obj.HSHG.allGridObjectsIndex = this.allObjects.length;\n    // add obj to cell\n    targetCell.objectContainer.push(obj);\n\n    // we can assume that the targetCell is already a member of the occupied list\n\n    // add to grid-global object list\n    this.allObjects.push(obj);\n\n    // do test for grid density\n    if (this.allObjects.length / this.allCells.length > this._parentHierarchy.MAX_OBJECT_CELL_DENSITY) {\n        // grid must be increased in size\n        this.expandGrid();\n    }\n};\n\nGrid.prototype.removeObject = function (obj) {\n    var meta = obj.HSHG,\n        hash,\n        containerIndex,\n        allGridObjectsIndex,\n        cell,\n        replacementCell,\n        replacementObj;\n\n    hash = meta.hash;\n    containerIndex = meta.objectContainerIndex;\n    allGridObjectsIndex = meta.allGridObjectsIndex;\n    cell = this.allCells[hash];\n\n    // remove object from cell object container\n    if (cell.objectContainer.length === 1) {\n        // this is the last object in the cell, so reset it\n        cell.objectContainer.length = 0;\n\n        // remove cell from occupied list\n        if (cell.occupiedCellsIndex === this.occupiedCells.length - 1) {\n            // special case if the cell is the newest in the list\n            this.occupiedCells.pop();\n        } else {\n            replacementCell = this.occupiedCells.pop();\n            replacementCell.occupiedCellsIndex = cell.occupiedCellsIndex;\n            this.occupiedCells[cell.occupiedCellsIndex] = replacementCell;\n        }\n\n        cell.occupiedCellsIndex = null;\n    } else {\n        // there is more than one object in the container\n        if (containerIndex === cell.objectContainer.length - 1) {\n            // special case if the obj is the newest in the container\n            cell.objectContainer.pop();\n        } else {\n            replacementObj = cell.objectContainer.pop();\n            replacementObj.HSHG.objectContainerIndex = containerIndex;\n            cell.objectContainer[containerIndex] = replacementObj;\n        }\n    }\n\n    // remove object from grid object list\n    if (allGridObjectsIndex === this.allObjects.length - 1) {\n        this.allObjects.pop();\n    } else {\n        replacementObj = this.allObjects.pop();\n        replacementObj.HSHG.allGridObjectsIndex = allGridObjectsIndex;\n        this.allObjects[allGridObjectsIndex] = replacementObj;\n    }\n};\n\nGrid.prototype.expandGrid = function () {\n    var i, j,\n        currentCellCount = this.allCells.length,\n        currentRowColumnCount = this.rowColumnCount,\n        currentXYHashMask = this.xyHashMask,\n\n        newCellCount = currentCellCount * 4, // double each dimension\n        newRowColumnCount = ~~Math.sqrt(newCellCount),\n        newXYHashMask = newRowColumnCount - 1,\n        allObjects = this.allObjects.slice(0), // duplicate array, not objects contained\n        aCell,\n        push = Array.prototype.push;\n\n    // remove all objects\n    for (i = 0; i < allObjects.length; i++) {\n        this.removeObject(allObjects[i]);\n    }\n\n    // reset grid values, set new grid to be 4x larger than last\n    this.rowColumnCount = newRowColumnCount;\n    this.allCells = Array(this.rowColumnCount * this.rowColumnCount);\n    this.xyHashMask = newXYHashMask;\n\n    // initialize new cells\n    this.initCells();\n\n    // re-add all objects to grid\n    for (i = 0; i < allObjects.length; i++) {\n        this.addObject(allObjects[i]);\n    }\n};\n\n/**\n * A cell of the grid\n *\n * @constructor\n * @return  void   desc\n */\nfunction Cell() {\n    this.objectContainer = [];\n    this.neighborOffsetArray;\n    this.occupiedCellsIndex = null;\n    this.allCellsIndex = null;\n}\n\n// ---------------------------------------------------------------------\n// EXPORTS\n// ---------------------------------------------------------------------\n\nHSHG._private = {\n    Grid: Grid,\n    Cell: Cell,\n    testAABBOverlap: testAABBOverlap,\n    getLongestAABBEdge: getLongestAABBEdge\n};\n\nexport default HSHG;\n","import HSHG from './HSHG';\n\n// Collision detection based on Hierarchical Spatial Hash Grid\n// uses this implementation https://gist.github.com/kirbysayshi/1760774\nclass HSHGCollisionDetection {\n\n    constructor(options) {\n        this.options = Object.assign({ COLLISION_DISTANCE: 28 }, options);\n    }\n\n    init(options) {\n        this.gameEngine = options.gameEngine;\n        this.grid = new HSHG();\n        this.previousCollisionPairs = {};\n        this.stepCollidingPairs = {};\n\n        this.gameEngine.on('objectAdded', obj => {\n            // add the gameEngine obj the the spatial grid\n            this.grid.addObject(obj);\n        });\n\n        this.gameEngine.on('objectDestroyed', obj => {\n            // add the gameEngine obj the the spatial grid\n            this.grid.removeObject(obj);\n        });\n    }\n\n    detect() {\n        this.grid.update();\n        this.stepCollidingPairs = this.grid.queryForCollisionPairs().reduce((accumulator, currentValue, i) => {\n            let pairId = getArrayPairId(currentValue);\n            accumulator[pairId] = { o1: currentValue[0], o2: currentValue[1] };\n            return accumulator;\n        }, {});\n\n        for (let pairId of Object.keys(this.previousCollisionPairs)) {\n            let pairObj = this.previousCollisionPairs[pairId];\n\n            // existed in previous pairs, but not during this step: this pair stopped colliding\n            if (pairId in this.stepCollidingPairs === false) {\n                this.gameEngine.emit('collisionStop', pairObj);\n            }\n        }\n\n        for (let pairId of Object.keys(this.stepCollidingPairs)) {\n            let pairObj = this.stepCollidingPairs[pairId];\n\n            // didn't exist in previous pairs, but exists now: this is a new colliding pair\n            if (pairId in this.previousCollisionPairs === false) {\n                this.gameEngine.emit('collisionStart', pairObj);\n            }\n        }\n\n        this.previousCollisionPairs = this.stepCollidingPairs;\n    }\n\n    /**\n     * checks wheter two objects are currently colliding\n     * @param {Object} o1 first object\n     * @param {Object} o2 second object\n     * @return {boolean} are the two objects colliding?\n     */\n    areObjectsColliding(o1, o2) {\n        return getArrayPairId([o1, o2]) in this.stepCollidingPairs;\n    }\n\n}\n\nfunction getArrayPairId(arrayPair) {\n    // make sure to get the same id regardless of object order\n    let sortedArrayPair = arrayPair.slice(0).sort();\n    return sortedArrayPair[0].id + '-' + sortedArrayPair[1].id;\n}\n\nexport default HSHGCollisionDetection;\n","import TwoVector from '../../serialize/TwoVector';\nlet differenceVector = new TwoVector();\n\n// The collision detection of SimplePhysicsEngine is a brute-force approach\nexport default class BruteForceCollisionDetection {\n\n    constructor(options) {\n        this.options = Object.assign({\n            autoResolve: true\n        }, options);\n        this.collisionPairs = {};\n    }\n\n    init(options) {\n        this.gameEngine = options.gameEngine;\n    }\n\n    findCollision(o1, o2) {\n\n        // static objects don't collide\n        if (o1.isStatic && o2.isStatic)\n            return false;\n\n        // allow a collision checker function\n        if (typeof o1.collidesWith === 'function') {\n            if (!o1.collidesWith(o2))\n                return false;\n        }\n\n        // radius-based collision\n        if (this.options.collisionDistance) {\n            differenceVector.copy(o1.position).subtract(o2.position);\n            return differenceVector.length() < this.options.collisionDistance;\n        }\n\n        // check for no-collision first\n        let o1Box = getBox(o1);\n        let o2Box = getBox(o2);\n        if (o1Box.xMin > o2Box.xMax ||\n            o1Box.yMin > o2Box.yMax ||\n            o2Box.xMin > o1Box.xMax ||\n            o2Box.yMin > o1Box.yMax)\n            return false;\n\n        if (!this.options.autoResolve)\n            return true;\n\n        // need to auto-resolve\n        let shiftY1 = o2Box.yMax - o1Box.yMin;\n        let shiftY2 = o1Box.yMax - o2Box.yMin;\n        let shiftX1 = o2Box.xMax - o1Box.xMin;\n        let shiftX2 = o1Box.xMax - o2Box.xMin;\n        let smallestYShift = Math.min(Math.abs(shiftY1), Math.abs(shiftY2));\n        let smallestXShift = Math.min(Math.abs(shiftX1), Math.abs(shiftX2));\n\n        // choose to apply the smallest shift which solves the collision\n        if (smallestYShift < smallestXShift) {\n            if (o1Box.yMin > o2Box.yMin && o1Box.yMin < o2Box.yMax) {\n                if (o2.isStatic) o1.position.y += shiftY1;\n                else if (o1.isStatic) o2.position.y -= shiftY1;\n                else {\n                    o1.position.y += shiftY1 / 2;\n                    o2.position.y -= shiftY1 / 2;\n                }\n            } else if (o1Box.yMax > o2Box.yMin && o1Box.yMax < o2Box.yMax) {\n                if (o2.isStatic) o1.position.y -= shiftY2;\n                else if (o1.isStatic) o2.position.y += shiftY2;\n                else {\n                    o1.position.y -= shiftY2 / 2;\n                    o2.position.y += shiftY2 / 2;\n                }\n            }\n            o1.velocity.y = 0;\n            o2.velocity.y = 0;\n        } else {\n            if (o1Box.xMin > o2Box.xMin && o1Box.xMin < o2Box.xMax) {\n                if (o2.isStatic) o1.position.x += shiftX1;\n                else if (o1.isStatic) o2.position.x -= shiftX1;\n                else {\n                    o1.position.x += shiftX1 / 2;\n                    o2.position.x -= shiftX1 / 2;\n                }\n            } else if (o1Box.xMax > o2Box.xMin && o1Box.xMax < o2Box.xMax) {\n                if (o2.isStatic) o1.position.x -= shiftX2;\n                else if (o1.isStatic) o2.position.x += shiftX2;\n                else {\n                    o1.position.x -= shiftX2 / 2;\n                    o2.position.x += shiftX2 / 2;\n                }\n            }\n            o1.velocity.x = 0;\n            o2.velocity.x = 0;\n        }\n\n        return true;\n    }\n\n    // check if pair (id1, id2) have collided\n    checkPair(id1, id2) {\n        let objects = this.gameEngine.world.objects;\n        let o1 = objects[id1];\n        let o2 = objects[id2];\n\n        // make sure that objects actually exist. might have been destroyed\n        if (!o1 || !o2) return;\n        let pairId = [id1, id2].join(',');\n\n        if (this.findCollision(o1, o2)) {\n            if (!(pairId in this.collisionPairs)) {\n                this.collisionPairs[pairId] = true;\n                this.gameEngine.emit('collisionStart', { o1, o2 });\n            }\n        } else if (pairId in this.collisionPairs) {\n            this.gameEngine.emit('collisionStop', { o1, o2 });\n            delete this.collisionPairs[pairId];\n        }\n    }\n\n    // detect by checking all pairs\n    detect() {\n        let objects = this.gameEngine.world.objects;\n        let keys = Object.keys(objects);\n\n        // delete non existant object pairs\n        for (let pairId in this.collisionPairs)\n            if (this.collisionPairs.hasOwnProperty(pairId))\n                if (keys.indexOf(pairId.split(',')[0]) === -1 || keys.indexOf(pairId.split(',')[1]) === -1)\n                    delete this.collisionPairs[pairId];\n\n        // check all pairs\n        for (let k1 of keys)\n            for (let k2 of keys)\n                if (k2 > k1) this.checkPair(k1, k2);\n    }\n}\n\n// get bounding box of object o\nfunction getBox(o) {\n    return {\n        xMin: o.position.x,\n        xMax: o.position.x + o.width,\n        yMin: o.position.y,\n        yMax: o.position.y + o.height\n    };\n}\n","import PhysicsEngine from './PhysicsEngine';\nimport TwoVector from '../serialize/TwoVector';\nimport HSHGCollisionDetection from './SimplePhysics/HSHGCollisionDetection';\nimport BruteForceCollisionDetection from './SimplePhysics/BruteForceCollisionDetection';\n\nlet dv = new TwoVector();\nlet dx = new TwoVector();\n\n/**\n * SimplePhysicsEngine is a pseudo-physics engine which works with\n * objects of class DynamicObject.\n * The Simple Physics Engine is a \"fake\" physics engine, which is more\n * appropriate for arcade games, and it is sometimes referred to as \"arcade\"\n * physics. For example if a character is standing at the edge of a platform,\n * with only one foot on the platform, it won't fall over. This is a desired\n * game behaviour in platformer games.\n */\n\nclass SimplePhysicsEngine extends PhysicsEngine {\n\n    /**\n    * Creates an instance of the Simple Physics Engine.\n    * @param {Object} options - physics options\n    * @param {Object} options.collisions - collision options\n    * @param {String} options.collisions.type - can be set to \"HSHG\" or \"bruteForce\".  Default is Brute-Force collision detection.\n    * @param {Number} options.collisions.collisionDistance - for brute force, this can be set for a simple distance-based (radius) collision detection.\n    * @param {Boolean} options.collisions.autoResolve - for brute force collision, colliding objects should be moved apart\n    * @param {TwoVector} options.gravity - TwoVector instance which describes gravity, which will be added to the velocity of all objects at every step.  For example TwoVector(0, -0.01)\n    */\n    constructor(options) {\n        super(options);\n\n        // todo does this mean both modules always get loaded?\n        if (options.collisions && options.collisions.type === 'HSHG') {\n            this.collisionDetection = new HSHGCollisionDetection(options.collisions);\n        } else {\n            this.collisionDetection = new BruteForceCollisionDetection(options.collisions);\n        }\n\n        /**\n         * The actor's name.\n         * @memberof SimplePhysicsEngine\n         * @member {TwoVector} gravity affecting all objects\n         */\n        this.gravity = new TwoVector(0, 0);\n\n        if (options.gravity)\n            this.gravity.copy(options.gravity);\n\n        let collisionOptions = Object.assign({ gameEngine: this.gameEngine }, options.collisionOptions);\n        this.collisionDetection.init(collisionOptions);\n    }\n\n    // a single object advances, based on:\n    // isRotatingRight, isRotatingLeft, isAccelerating, current velocity\n    // wrap-around the world if necessary\n    objectStep(o, dt) {\n\n        // calculate factor\n        if (dt === 0)\n            return;\n\n        if (dt)\n            dt /= (1 / 60);\n        else\n            dt = 1;\n\n        // TODO: worldsettings is a hack.  Find all places which use it in all games\n        // and come up with a better solution.  for example an option sent to the physics Engine\n        // with a \"worldWrap:true\" options\n        // replace with a \"worldBounds\" parameter to the PhysicsEngine constructor\n\n        let worldSettings = this.gameEngine.worldSettings;\n\n        // TODO: remove this code in version 4: these attributes are deprecated\n        if (o.isRotatingRight) { o.angle += o.rotationSpeed; }\n        if (o.isRotatingLeft) { o.angle -= o.rotationSpeed; }\n\n        // TODO: remove this code in version 4: these attributes are deprecated\n        if (o.angle >= 360) { o.angle -= 360; }\n        if (o.angle < 0) { o.angle += 360; }\n\n        // TODO: remove this code in version 4: these attributes are deprecated\n        if (o.isAccelerating) {\n            let rad = o.angle * (Math.PI / 180);\n            dv.set(Math.cos(rad), Math.sin(rad)).multiplyScalar(o.acceleration).multiplyScalar(dt);\n            o.velocity.add(dv);\n        }\n\n        // apply gravity\n        if (!o.isStatic) o.velocity.add(this.gravity);\n\n        let velMagnitude = o.velocity.length();\n        if ((o.maxSpeed !== null) && (velMagnitude > o.maxSpeed)) {\n            o.velocity.multiplyScalar(o.maxSpeed / velMagnitude);\n        }\n\n        o.isAccelerating = false;\n        o.isRotatingLeft = false;\n        o.isRotatingRight = false;\n\n        dx.copy(o.velocity).multiplyScalar(dt);\n        o.position.add(dx);\n\n        o.velocity.multiply(o.friction);\n\n        // wrap around the world edges\n        if (worldSettings.worldWrap) {\n            if (o.position.x >= worldSettings.width) { o.position.x -= worldSettings.width; }\n            if (o.position.y >= worldSettings.height) { o.position.y -= worldSettings.height; }\n            if (o.position.x < 0) { o.position.x += worldSettings.width; }\n            if (o.position.y < 0) { o.position.y += worldSettings.height; }\n        }\n    }\n\n    // entry point for a single step of the Simple Physics\n    step(dt, objectFilter) {\n\n        // each object should advance\n        let objects = this.gameEngine.world.objects;\n        for (let objId of Object.keys(objects)) {\n\n            // shadow objects are not re-enacted\n            let ob = objects[objId];\n            if (!objectFilter(ob))\n                continue;\n\n            // run the object step\n            this.objectStep(ob, dt);\n        }\n\n        // emit event on collision\n        this.collisionDetection.detect(this.gameEngine);\n    }\n}\n\nexport default SimplePhysicsEngine;\n","import PhysicsEngine from './PhysicsEngine';\nconst CANNON = require('cannon');\n\n/**\n * CannonPhysicsEngine is a three-dimensional lightweight physics engine\n */\nclass CannonPhysicsEngine extends PhysicsEngine {\n\n    constructor(options) {\n        super(options);\n\n        this.options.dt = this.options.dt || (1 / 60);\n        let world = this.world = new CANNON.World();\n        world.quatNormalizeSkip = 0;\n        world.quatNormalizeFast = false;\n        world.gravity.set(0, -10, 0);\n        world.broadphase = new CANNON.NaiveBroadphase();\n        this.CANNON = CANNON;\n    }\n\n    // entry point for a single step of the Simple Physics\n    step(dt, objectFilter) {\n        this.world.step(dt || this.options.dt);\n    }\n\n    addSphere(radius, mass) {\n        let shape = new CANNON.Sphere(radius);\n        let body = new CANNON.Body({ mass, shape });\n        body.position.set(0, 0, 0);\n        this.world.addBody(body);\n        return body;\n    }\n\n    addBox(x, y, z, mass, friction) {\n        let shape = new CANNON.Box(new CANNON.Vec3(x, y, z));\n        let options = { mass, shape };\n        if (friction !== undefined)\n            options.material = new CANNON.Material({ friction });\n\n        let body = new CANNON.Body(options);\n        body.position.set(0, 0, 0);\n        this.world.addBody(body);\n        return body;\n    }\n\n    addCylinder(radiusTop, radiusBottom, height, numSegments, mass) {\n        let shape = new CANNON.Cylinder(radiusTop, radiusBottom, height, numSegments);\n        let body = new CANNON.Body({ mass, shape });\n        this.world.addBody(body);\n        return body;\n    }\n\n    removeObject(obj) {\n        this.world.removeBody(obj);\n    }\n}\n\nexport default CannonPhysicsEngine;\n","import Serializable from './Serializable';\nimport BaseTypes from './BaseTypes';\n\n/**\n * A ThreeVector is a geometric object which is completely described\n * by three values.\n */\nclass ThreeVector extends Serializable {\n\n    static get netScheme() {\n        return {\n            x: { type: BaseTypes.TYPES.FLOAT32 },\n            y: { type: BaseTypes.TYPES.FLOAT32 },\n            z: { type: BaseTypes.TYPES.FLOAT32 }\n        };\n    }\n\n    /**\n    * Creates an instance of a ThreeVector.\n    * @param {Number} x - first value\n    * @param {Number} y - second value\n    * @param {Number} z - second value\n    * @return {ThreeVector} v - the new ThreeVector\n    */\n    constructor(x, y, z) {\n        super();\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        return this;\n    }\n\n    /**\n     * Formatted textual description of the ThreeVector.\n     * @return {String} description\n     */\n    toString() {\n        function round3(x) { return Math.round(x * 1000) / 1000; }\n        return `[${round3(this.x)}, ${round3(this.y)}, ${round3(this.z)}]`;\n    }\n\n    /**\n     * Multiply this ThreeVector by a scalar\n     *\n     * @param {Number} s the scale\n     * @return {ThreeVector} returns self\n     */\n    multiplyScalar(s) {\n        this.x *= s;\n        this.y *= s;\n        this.z *= s;\n        return this;\n    }\n\n    /**\n     * Get vector length\n     *\n     * @return {Number} length of this vector\n     */\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    /**\n     * Add other vector to this vector\n     *\n     * @param {ThreeVector} other the other vector\n     * @return {ThreeVector} returns self\n     */\n    add(other) {\n        this.x += other.x;\n        this.y += other.y;\n        this.z += other.z;\n        return this;\n    }\n\n    /**\n     * Subtract other vector from this vector\n     *\n     * @param {ThreeVector} other the other vector\n     * @return {ThreeVector} returns self\n     */\n    subtract(other) {\n        this.x -= other.x;\n        this.y -= other.y;\n        this.z -= other.z;\n        return this;\n    }\n\n    /**\n     * Normalize this vector, in-place\n     *\n     * @return {ThreeVector} returns self\n     */\n    normalize() {\n        this.multiplyScalar(1 / this.length());\n        return this;\n    }\n\n    /**\n     * Copy values from another ThreeVector into this ThreeVector\n     *\n     * @param {ThreeVector} sourceObj the other vector\n     * @return {ThreeVector} returns self\n     */\n    copy(sourceObj) {\n        this.x = sourceObj.x;\n        this.y = sourceObj.y;\n        this.z = sourceObj.z;\n        return this;\n    }\n\n    /**\n     * Set ThreeVector values\n     *\n     * @param {Number} x x-value\n     * @param {Number} y y-value\n     * @param {Number} z z-value\n     * @return {ThreeVector} returns self\n     */\n    set(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n    }\n\n    /**\n     * Create a clone of this vector\n     *\n     * @return {ThreeVector} returns clone\n     */\n    clone() {\n        return new ThreeVector(this.x, this.y, this.z);\n    }\n\n    /**\n     * Apply in-place lerp (linear interpolation) to this ThreeVector\n     * towards another ThreeVector\n     * @param {ThreeVector} target the target vector\n     * @param {Number} p The percentage to interpolate\n     * @return {ThreeVector} returns self\n     */\n    lerp(target, p) {\n        this.x += (target.x - this.x) * p;\n        this.y += (target.y - this.y) * p;\n        this.z += (target.z - this.z) * p;\n        return this;\n    }\n\n    /**\n     * Get bending Delta Vector\n     * towards another ThreeVector\n     * @param {ThreeVector} target the target vector\n     * @param {Object} options bending options\n     * @param {Number} options.increments number of increments\n     * @param {Number} options.percent The percentage to bend\n     * @param {Number} options.min No less than this value\n     * @param {Number} options.max No more than this value\n     * @return {ThreeVector} returns new Incremental Vector\n     */\n    getBendingDelta(target, options) {\n        let increment = target.clone();\n        increment.subtract(this);\n        increment.multiplyScalar(options.percent);\n\n        // check for max case\n        if ((options.max && increment.length() > options.max) ||\n            (options.max && increment.length() < options.min)) {\n            return new ThreeVector(0, 0, 0);\n        }\n\n        // divide into increments\n        increment.multiplyScalar(1 / options.increments);\n\n        return increment;\n    }\n\n    toJSON() {\n        return {\n            x: this.x,\n            y: this.y,\n            z: this.z\n        }\n    }\n}\n\nexport default ThreeVector;\n","import Serializable from './Serializable';\nimport BaseTypes from './BaseTypes';\nimport ThreeVector from './ThreeVector';\n\nconst SHOW_AS_AXIS_ANGLE = true;\nconst MAX_DEL_THETA = 0.2;\n\n/**\n * A Quaternion is a geometric object which can be used to\n * represent a three-dimensional rotation.\n */\nclass Quaternion extends Serializable {\n\n    static get netScheme() {\n        return {\n            w: { type: BaseTypes.TYPES.FLOAT32 },\n            x: { type: BaseTypes.TYPES.FLOAT32 },\n            y: { type: BaseTypes.TYPES.FLOAT32 },\n            z: { type: BaseTypes.TYPES.FLOAT32 }\n        };\n    }\n\n    /**\n    * Creates an instance of a Quaternion.\n    * @param {Number} w - first value\n    * @param {Number} x - second value\n    * @param {Number} y - third value\n    * @param {Number} z - fourth value\n    * @return {Quaternion} v - the new Quaternion\n    */\n    constructor(w, x, y, z) {\n        super();\n        this.w = w;\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        return this;\n    }\n\n    /**\n     * Formatted textual description of the Quaternion.\n     * @return {String} description\n     */\n    toString() {\n        function round3(x) { return Math.round(x * 1000) / 1000; }\n        if (SHOW_AS_AXIS_ANGLE) {\n            let axisAngle = this.toAxisAngle();\n            return `[${round3(axisAngle.angle)},${axisAngle.axis.toString()}]`;\n        }\n        return `[${round3(this.w)}, ${round3(this.x)}, ${round3(this.y)}, ${round3(this.z)}]`;\n    }\n\n    /**\n     * copy values from another quaternion into this quaternion\n     *\n     * @param {Quaternion} sourceObj the quaternion to copy from\n     * @return {Quaternion} returns self\n     */\n    copy(sourceObj) {\n        this.set(sourceObj.w, sourceObj.x, sourceObj.y, sourceObj.z);\n        return this;\n    }\n\n    /**\n     * set quaternion values\n     *\n     * @param {Number} w w-value\n     * @param {Number} x x-value\n     * @param {Number} y y-value\n     * @param {Number} z z-value\n     * @return {Quaternion} returns self\n     */\n    set(w, x, y, z) {\n        this.w = w;\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        return this;\n    }\n\n    /**\n     * return an axis-angle representation of this quaternion\n     *\n     * @return {Object} contains two attributes: axis (ThreeVector) and angle.\n     */\n    toAxisAngle() {\n\n        // assuming quaternion normalised then w is less than 1, so term always positive.\n        let axis = new ThreeVector(1, 0, 0);\n        this.normalize();\n        let angle = 2 * Math.acos(this.w);\n        let s = Math.sqrt(1 - this.w * this.w);\n        if (s > 0.001) {\n            let divS = 1 / s;\n            axis.x = this.x * divS;\n            axis.y = this.y * divS;\n            axis.z = this.z * divS;\n        }\n        if (s > Math.PI) {\n            s -= 2 * Math.PI;\n        }\n        return { axis, angle };\n    }\n\n    normalize() {\n        let l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        if (l === 0) {\n            this.x = 0;\n            this.y = 0;\n            this.z = 0;\n            this.w = 0;\n        } else {\n            l = 1 / l;\n            this.x *= l;\n            this.y *= l;\n            this.z *= l;\n            this.w *= l;\n        }\n\n        return this;\n    }\n\n    /**\n     * set the values of this quaternion from an axis/angle representation\n     *\n     * @param {ThreeVector} axis The axis\n     * @param {Number} angle angle in radians\n     * @return {Quaternion} returns self\n     */\n    setFromAxisAngle(axis, angle) {\n\n        if (angle < 0)\n            angle += Math.PI * 2;\n        let halfAngle = angle * 0.5;\n        let s = Math.sin(halfAngle);\n        this.x = axis.x * s;\n        this.y = axis.y * s;\n        this.z = axis.z * s;\n        this.w = Math.cos(halfAngle);\n\n        return this;\n    }\n\n    /**\n     * conjugate the quaternion, in-place\n     *\n     * @return {Quaternion} returns self\n     */\n    conjugate() {\n        this.x *= -1;\n        this.y *= -1;\n        this.z *= -1;\n        return this;\n    }\n\n    /* eslint-disable */\n    /**\n     * multiply this quaternion by another, in-place\n     *\n     * @param {Quaternion} other The other quaternion\n     * @return {Quaternion} returns self\n     */\n    multiply(other) {\n        let aw = this.w, ax = this.x, ay = this.y, az = this.z;\n        let bw = other.w, bx = other.x, by = other.y, bz = other.z;\n\n        this.x = ax * bw + aw * bx + ay * bz - az * by;\n        this.y = ay * bw + aw * by + az * bx - ax * bz;\n        this.z = az * bw + aw * bz + ax * by - ay * bx;\n        this.w = aw * bw - ax * bx - ay * by - az * bz;\n\n        return this;\n    }\n    /* eslint-enable */\n\n    /* eslint-disable */\n    /**\n     * Apply in-place slerp (spherical linear interpolation) to this quaternion,\n     * towards another quaternion.\n     *\n     * @param {Quaternion} target The target quaternion\n     * @param {Number} bending The percentage to interpolate\n     * @return {Quaternion} returns self\n     */\n    slerp(target, bending) {\n\n        if (bending <= 0) return this;\n        if (bending >= 1) return this.copy(target);\n\n        let aw = this.w, ax = this.x, ay = this.y, az = this.z;\n        let bw = target.w, bx = target.x, by = target.y, bz = target.z;\n\n        let cosHalfTheta = aw*bw + ax*bx + ay*by + az*bz;\n        if (cosHalfTheta < 0) {\n            this.set(-bw, -bx, -by, -bz);\n            cosHalfTheta = -cosHalfTheta;\n        } else {\n            this.copy(target);\n        }\n\n        if (cosHalfTheta >= 1.0) {\n            this.set(aw, ax, ay, az);\n            return this;\n        }\n\n        let sqrSinHalfTheta = 1.0 - cosHalfTheta*cosHalfTheta;\n        if (sqrSinHalfTheta < Number.EPSILON) {\n            let s = 1 - bending;\n            this.set(s*aw + bending*this.w, s*ax + bending*this.x, s*ay + bending*this.y, s*az + bending*this.z);\n            return this.normalize();\n        }\n\n        let sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n        let halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n        let delTheta = bending * halfTheta;\n        if (Math.abs(delTheta) > MAX_DEL_THETA)\n            delTheta = MAX_DEL_THETA * Math.sign(delTheta);\n        let ratioA = Math.sin(halfTheta - delTheta)/sinHalfTheta;\n        let ratioB = Math.sin(delTheta)/sinHalfTheta;\n        this.set(aw*ratioA + this.w*ratioB,\n            ax*ratioA + this.x*ratioB,\n            ay*ratioA + this.y*ratioB,\n            az*ratioA + this.z*ratioB);\n        return this;\n    }\n    /* eslint-enable */\n}\n\nexport default Quaternion;\n","import Serializable from './Serializable';\nimport BaseTypes from './BaseTypes';\n\n/**\n * GameObject is the base class of all game objects.\n * It is created only for the purpose of clearly defining the game\n * object interface.\n * Game developers will use one of the subclasses such as DynamicObject,\n * or PhysicalObject.\n */\nclass GameObject extends Serializable {\n\n    static get netScheme() {\n        return {\n            id: { type: BaseTypes.TYPES.STRING },\n            playerId: { type: BaseTypes.TYPES.STRING }\n        };\n    }\n\n    /**\n    * Creates an instance of a game object.\n    * @param {GameEngine} gameEngine - the gameEngine this object will be used in\n    * @param {Object} options - options for instantiation of the GameObject\n    * @param {Number} id - if set, the new instantiated object will be set to this id instead of being generated a new one. Use with caution!\n    * @param {Object} props - additional properties for creation\n    * @param {Number} props.playerId - the playerId value of the player who owns this object\n    */\n    constructor(gameEngine, options, props) {\n        super();\n        /**\n         * The gameEngine this object will be used in\n         * @member {GameEngine}\n         */\n        this.gameEngine = gameEngine;\n\n        /**\n        * ID of this object's instance.\n        * There are three cases of instance creation which can occur:\n        * 1. In the normal case, the constructor is asked to assign an ID which is unique\n        * across the entire game world, including the server and all the clients.\n        * 2. In extrapolation mode, the client may have an object instance which does not\n        * yet exist on the server, these objects are known as shadow objects.  Their IDs must\n        * be allocated from a different range.\n        * 3. Also, temporary objects are created on the client side each time a sync is received.\n        * These are used for interpolation purposes and as bending targets of position, velocity,\n        * angular velocity, and orientation.  In this case the id will be set to null.\n        * @member {Number}\n        */\n        this.id = null;\n        this.playerId = (props && props.playerId) ? props.playerId : 0;\n        \n        if (options && 'id' in options)\n            this.id = options.id;\n        else if (this.gameEngine)\n            this.id = this.playerId || this.gameEngine.world.getNewId();\n\n        /**\n        * playerId of player who created this object\n        * @member {Number}\n        */\n       \n\n        this.components = {};\n    }\n\n    /**\n     * Called after the object is added to to the game world.\n     * This is the right place to add renderer sub-objects, physics sub-objects\n     * and any other resources that should be created\n     * @param {GameEngine} gameEngine the game engine\n     */\n    onAddToWorld(gameEngine) {}\n\n    /**\n     * Called after the object is removed from game-world.\n     * This is where renderer sub-objects and any other resources should be freed\n     * @param {GameEngine} gameEngine the game engine\n     */\n    onRemoveFromWorld(gameEngine) {}\n\n    /**\n     * Formatted textual description of the game object.\n     * @return {String} description - a string description\n     */\n    toString() {\n        return `game-object[${this.id}]`;\n    }\n\n    /**\n     * Formatted textual description of the game object's current bending properties.\n     * @return {String} description - a string description\n     */\n    bendingToString() {\n        return 'no bending';\n    }\n\n    saveState(other) {\n        this.savedCopy = (new this.constructor(this.gameEngine, { id: null }));\n        this.savedCopy.syncTo(other ? other : this);\n    }\n   /**\n    * Bending is defined as the amount of error correction that will be applied\n    * on the client side to a given object's physical attributes, incrementally,\n    * by the time the next server broadcast is expected to arrive.\n    *\n    * When this percentage is 0.0, the client always ignores the server object's value.\n    * When this percentage is 1.0, the server object's attributes will be applied in full.\n    *\n    * The GameObject bending attribute is implemented as a getter, and can provide\n    * distinct values for position, velocity, angle, and angularVelocity.\n    * And in each case, you can also provide overrides for local objects,\n    * these attributes will be called, respectively, positionLocal, velocityLocal,\n    * angleLocal, angularVelocityLocal.\n    *\n    * @example\n    * get bending() {\n    *   return {\n    *     position: { percent: 1.0, min: 0.0 },\n    *     velocity: { percent: 0.0, min: 0.0 },\n    *     angularVelocity: { percent: 0.0 },\n    *     angleLocal: { percent: 1.0 }\n    *   }\n    * };\n    *\n    * @memberof GameObject\n    * @member {Object} bending\n    */\n    get bending() {\n        return {\n            position: { percent: 1.0, min: 0.0 },\n            velocity: { percent: 0.0, min: 0.0 },\n            angularVelocity: { percent: 0.0 },\n            angleLocal: { percent: 1.0 }\n        };\n    }\n\n    // TODO:\n    // rather than pass worldSettings on each bend, they could\n    // be passed in on the constructor just once.\n    bendToCurrentState(bending, worldSettings, isLocal, bendingIncrements) {\n        if (this.savedCopy) {\n            this.bendToCurrent(this.savedCopy, bending, worldSettings, isLocal, bendingIncrements);\n        }\n        this.savedCopy = null;\n    }\n\n    bendToCurrent(original, bending, worldSettings, isLocal, bendingIncrements) {\n    }\n\n    /**\n     * synchronize this object to the state of an other object, by copying all the netscheme variables.\n     * This is used by the synchronizer to create temporary objects, and must be implemented by all sub-classes as well.\n     * @param {GameObject} other the other object to synchronize to\n     */\n    syncTo(other) {\n        super.syncTo(other);\n        this.playerId = other.playerId;\n    }\n\n    // copy physical attributes to physics sub-object\n    refreshToPhysics() {}\n\n    // copy physical attributes from physics sub-object\n    refreshFromPhysics() {}\n\n    // apply a single bending increment\n    applyIncrementalBending() { }\n\n    // clean up resources\n    destroy() {}\n\n    addComponent(componentInstance) {\n        componentInstance.parentObject = this;\n        this.components[componentInstance.constructor.name] = componentInstance;\n\n        // a gameEngine might not exist if this class is instantiated by the serializer\n        if (this.gameEngine) {\n            this.gameEngine.emit('componentAdded', this, componentInstance);\n        }\n    }\n\n    removeComponent(componentName) {\n        // todo cleanup of the component ?\n        delete this.components[componentName];\n\n        // a gameEngine might not exist if this class is instantiated by the serializer\n        if (this.gameEngine) {\n            this.gameEngine.emit('componentRemoved', this, componentName);\n        }\n    }\n\n    /**\n     * Check whether this game object has a certain component\n     * @param {Object} componentClass the comp\n     * @return {Boolean} true if the gameObject contains this component\n     */\n    hasComponent(componentClass) {\n        return componentClass.name in this.components;\n    }\n\n    getComponent(componentClass) {\n        return this.components[componentClass.name];\n    }\n\n}\n\nexport default GameObject;\n","export default class MathUtils {\n\n    // interpolate from start to end, advancing \"percent\" of the way\n    static interpolate(start, end, percent) {\n        return (end - start) * percent + start;\n    }\n\n    // interpolate from start to end, advancing \"percent\" of the way\n    //\n    // returns just the delta. i.e. the value that must be added to the start value\n    static interpolateDelta(start, end, percent) {\n        return (end - start) * percent;\n    }\n\n    // interpolate from start to end, advancing \"percent\" of the way\n    // and noting that the dimension wraps around {x >= wrapMin, x < wrapMax}\n    //\n    // returns just the delta. i.e. the value that must be added to the start value\n    static interpolateDeltaWithWrapping(start, end, percent, wrapMin, wrapMax) {\n        let wrapTest = wrapMax - wrapMin;\n        if (start - end > wrapTest / 2) end += wrapTest;\n        else if (end - start > wrapTest / 2) start += wrapTest;\n        if (Math.abs(start - end) > wrapTest / 3) {\n            console.log('wrap interpolation is close to limit.  Not sure which edge to wrap to.');\n        }\n        return (end - start) * percent;\n    }\n\n    static interpolateWithWrapping(start, end, percent, wrapMin, wrapMax) {\n        let interpolatedVal = start + this.interpolateDeltaWithWrapping(start, end, percent, wrapMin, wrapMax);\n        let wrapLength = wrapMax - wrapMin;\n        if (interpolatedVal >= wrapLength) interpolatedVal -= wrapLength;\n        if (interpolatedVal < 0) interpolatedVal += wrapLength;\n        return interpolatedVal;\n    }\n}","import TwoVector from './TwoVector';\nimport GameObject from './GameObject';\nimport BaseTypes from './BaseTypes';\nimport MathUtils from '../lib/MathUtils';\n\n/**\n * DynamicObject is the base class of the game's objects, for 2D games which\n * rely on {@link SimplePhysicsEngine}.  It defines the\n * base object which can move around in the game world.  The\n * extensions of this object (the subclasses)\n * will be periodically synchronized from the server to every client.\n *\n * The dynamic objects have pseudo-physical properties, which\n * allow the client to extrapolate the position\n * of dynamic objects in-between server updates.\n */\nclass DynamicObject extends GameObject {\n\n    /**\n    * The netScheme is a dictionary of attributes in this game\n    * object.  The attributes listed in the netScheme are those exact\n    * attributes which will be serialized and sent from the server\n    * to each client on every server update.\n    * The netScheme member is implemented as a getter.\n    *\n    * You may choose not to implement this method, in which\n    * case your object only transmits the default attributes\n    * which are already part of {@link DynamicObject}.\n    * But if you choose to add more attributes, make sure\n    * the return value includes the netScheme of the super class.\n    *\n    * @memberof DynamicObject\n    * @member {Object} netScheme\n    * @example\n    *     static get netScheme() {\n    *       return Object.assign({\n    *           mojo: { type: BaseTypes.TYPES.UINT8 },\n    *         }, super.netScheme);\n    *     }\n    */\n    static get netScheme() {\n        return Object.assign({\n            position: { type: BaseTypes.TYPES.CLASSINSTANCE },\n            width: { type: BaseTypes.TYPES.INT16 },\n            height: { type: BaseTypes.TYPES.INT16 },\n            isStatic: { type: BaseTypes.TYPES.UINT8 },\n            velocity: { type: BaseTypes.TYPES.CLASSINSTANCE },\n            angle: { type: BaseTypes.TYPES.FLOAT32 }\n        }, super.netScheme);\n    }\n\n    /**\n    * Creates an instance of a dynamic object.\n    * NOTE 1: do not add logic to subcclasses of this function, instead, create an instance and\n    *       assign attributes to the new objects.\n    * NOTE 2: all subclasses of this class must comply with this constructor signature.\n    *       This is required because the engine will create temporary instances when\n    *       syncs arrive on the clients.\n    * @param {GameEngine} gameEngine - the gameEngine this object will be used in\n    * @param {Object} options - options for the new object. See {@link GameObject}\n    * @param {Object} props - properties to be set in the new object\n    * @param {TwoVector} props.position - position vector\n    * @param {TwoVector} props.velocity - velocity vector\n    * @param {Number} props.height - object height\n    * @param {Number} props.width - object width\n    */\n    constructor(gameEngine, options, props) {\n        super(gameEngine, options, props);\n\n        this.bendingIncrements = 0;\n\n        this.velocity = new TwoVector(0, 0);\n\n        /**\n         * Object width for collision detection purposes. Default is 1\n         * @member {Number}\n         */\n        this.width = (props && props.width) ? props.width : 1;\n\n        /**\n         * Object height for collision detection purposes. Default is 1\n         * @member {Number}\n         */\n        this.height = (props && props.height) ? props.height : 1;\n\n        /**\n         * Determine if the object is static (i.e. it never moves, like a wall). The value 0 implies the object is dynamic.  Default is 0 (dynamic).\n         * @member {Number}\n         */\n        this.isStatic = (props && props.isStatic) ? props.isStatic : 0;\n\n        /**\n         * The friction coefficient. Velocity is multiplied by this for each step. Default is (1,1)\n         * @member {TwoVector}\n         */\n        this.friction = new TwoVector(1, 1);\n\n        /**\n        * position\n        * @member {TwoVector}\n        */\n        if (props && props.position) this.position.copy(props.position);\n\n        /**\n        * velocity\n        * @member {TwoVector}\n        */\n        if (props && props.velocity) this.velocity.copy(props.velocity);\n\n        /**\n        * object orientation angle in degrees\n        * @member {Number}\n        */\n        this.angle = 90;\n\n        /**\n        * @deprecated since version 3.0.8\n        * should rotate left by {@link DynamicObject#rotationSpeed} on next step\n        * @member {Boolean}\n        */\n        this.isRotatingLeft = false;\n\n        /**\n        * @deprecated since version 3.0.8\n        * should rotate right by {@link DynamicObject#rotationSpeed} on next step\n        * @member {Boolean}\n        */\n        this.isRotatingRight = false;\n\n        /**\n        * @deprecated since version 3.0.8\n        * should accelerate by {@link DynamicObject#acceleration} on next step\n        * @member {Boolean}\n        */\n        this.isAccelerating = false;\n\n        /**\n        * @deprecated since version 3.0.8\n        * angle rotation per step\n        * @member {Number}\n        */\n        this.rotationSpeed = 2.5;\n\n        /**\n        * @deprecated since version 3.0.8\n        * acceleration per step\n        * @member {Number}\n        */\n        this.acceleration = 0.1;\n\n        this.deceleration = 0.99;\n    }\n\n    // convenience getters\n    get x() { return this.position.x; }\n    get y() { return this.position.y; }\n\n    /**\n     * Formatted textual description of the dynamic object.\n     * The output of this method is used to describe each instance in the traces,\n     * which significantly helps in debugging.\n     *\n     * @return {String} description - a string describing the DynamicObject\n     */\n    toString() {\n        function round3(x) { return Math.round(x * 1000) / 1000; }\n        return `${this.constructor.name}[${this.id}] player${this.playerId} Pos=${this.position} Vel=${this.velocity} angle${round3(this.angle)}`;\n    }\n\n    /**\n     * Each object class can define its own bending overrides.\n     * return an object which can include attributes: position, velocity,\n     * and angle.  In each case, you can specify a min value, max\n     * value, and a percent value.  { @see GameObject.bending }\n     *\n     * @return {Object} bending - an object with bending paramters\n     */\n    get bending() {\n        return {\n            // example:\n            // position: { percent: 0.8, min: 0.0, max: 4.0 },\n            // velocity: { percent: 0.4, min: 0.0 },\n            // angleLocal: { percent: 0.0 }\n        };\n    }\n\n    /**\n    * turn object clock-wise\n    * @param {Number} deltaAngle - the angle to turn, in degrees\n    * @return {DynamicObject} return this object\n    */\n    turnRight(deltaAngle) {\n        this.angle += deltaAngle;\n        if (this.angle >= 360) { this.angle -= 360; }\n        if (this.angle < 0) { this.angle += 360; }\n        return this;\n    }\n\n    /**\n    * turn object counter-clock-wise\n    * @param {Number} deltaAngle - the angle to turn, in degrees\n    * @return {DynamicObject} return this object\n    */\n    turnLeft(deltaAngle) {\n        return this.turnRight(-deltaAngle);\n    }\n\n    /**\n    * accelerate along the direction that the object is facing\n    * @param {Number} acceleration - the acceleration\n    * @return {DynamicObject} return this object\n    */\n    accelerate(acceleration) {\n        let rad = this.angle * (Math.PI / 180);\n        let dv = new TwoVector(Math.cos(rad), Math.sin(rad));\n        dv.multiplyScalar(acceleration);\n        this.velocity.add(dv);\n\n        return this;\n    }\n\n    /**\n     * Formatted textual description of the game object's current bending properties.\n     * @return {String} description - a string description\n     */\n    bendingToString() {\n        if (this.bendingIncrements)\n            return `ΔPos=${this.bendingPositionDelta} ΔVel=${this.bendingVelocityDelta} ΔAngle=${this.bendingAngleDelta} increments=${this.bendingIncrements}`;\n        return 'no bending';\n    }\n\n    /**\n    * The maximum velocity allowed.  If returns null then ignored.\n    * @memberof DynamicObject\n    * @member {Number} maxSpeed\n    */\n    get maxSpeed() { return null; }\n\n    /**\n    * Copy the netscheme variables from another DynamicObject.\n    * This is used by the synchronizer to create temporary objects, and must be implemented by all sub-classes as well.\n    * @param {DynamicObject} other DynamicObject\n    */\n    syncTo(other) {\n        super.syncTo(other);\n        this.position.copy(other.position);\n        this.velocity.copy(other.velocity);\n        this.width = other.width;\n        this.height = other.height;\n        this.bendingAngle = other.bendingAngle;\n        this.rotationSpeed = other.rotationSpeed;\n        this.acceleration = other.acceleration;\n        this.deceleration = other.deceleration;\n    }\n\n    bendToCurrent(original, percent, worldSettings, isLocal, increments) {\n\n        let bending = { increments, percent };\n        // if the object has defined a bending multiples for this object, use them\n        let positionBending = Object.assign({}, bending, this.bending.position);\n        let velocityBending = Object.assign({}, bending, this.bending.velocity);\n        let angleBending = Object.assign({}, bending, this.bending.angle);\n\n        if (isLocal) {\n            Object.assign(positionBending, this.bending.positionLocal);\n            Object.assign(velocityBending, this.bending.velocityLocal);\n            Object.assign(angleBending, this.bending.angleLocal);\n        }\n        // get the incremental delta position & velocity\n        this.incrementScale = percent / increments;\n        this.bendingPositionDelta = original.position.getBendingDelta(this.position, positionBending);\n        this.bendingVelocityDelta = original.velocity.getBendingDelta(this.velocity, velocityBending);\n        this.bendingAngleDelta = MathUtils.interpolateDeltaWithWrapping(original.angle, this.angle, angleBending.percent, 0, 360) / increments;\n\n        this.bendingTarget = (new this.constructor());\n        this.bendingTarget.syncTo(this);\n\n        // revert to original\n        this.position.copy(original.position);\n        this.velocity.copy(original.velocity);\n        this.angle = original.angle;\n\n        // keep parameters\n        this.bendingIncrements = increments;\n        this.bendingOptions = bending;\n    }\n\n    applyIncrementalBending(stepDesc) {\n        if (this.bendingIncrements === 0)\n            return;\n\n        let timeFactor = 1;\n        if (stepDesc && stepDesc.dt)\n            timeFactor = stepDesc.dt / (1000 / 60);\n\n        const posDelta = this.bendingPositionDelta.clone().multiplyScalar(timeFactor);\n        const velDelta = this.bendingVelocityDelta.clone().multiplyScalar(timeFactor);\n        this.position.add(posDelta);\n        this.velocity.add(velDelta);\n        this.angle += (this.bendingAngleDelta * timeFactor);\n\n        this.bendingIncrements--;\n    }\n\n    getAABB() {\n        // todo take rotation into account\n        // registration point is in the middle\n        return {\n            min: [this.x - this.width / 2, this.y - this.height / 2],\n            max: [this.x + this.width / 2, this.y + this.height / 2]\n        };\n    }\n\n    /**\n    * Determine if this object will collide with another object.\n    * Only applicable on \"bruteForce\" physics engine.\n    * @param {DynamicObject} other DynamicObject\n    * @return {Boolean} true if the two objects collide\n    */\n    collidesWith(other) {\n        return true;\n    }\n\n}\n\nexport default DynamicObject;\n","import GameObject from './GameObject';\nimport BaseTypes from './BaseTypes';\nimport TwoVector from './TwoVector';\nimport MathUtils from '../lib/MathUtils';\n\n/**\n * The PhysicalObject2D is the base class for physical game objects in 2D Physics\n */\nclass PhysicalObject2D extends GameObject {\n\n    /**\n    * The netScheme is a dictionary of attributes in this game\n    * object.  The attributes listed in the netScheme are those exact\n    * attributes which will be serialized and sent from the server\n    * to each client on every server update.\n    * The netScheme member is implemented as a getter.\n    *\n    * You may choose not to implement this method, in which\n    * case your object only transmits the default attributes\n    * which are already part of {@link PhysicalObject2D}.\n    * But if you choose to add more attributes, make sure\n    * the return value includes the netScheme of the super class.\n    *\n    * @memberof PhysicalObject2D\n    * @member {Object} netScheme\n    * @example\n    *     static get netScheme() {\n    *       return Object.assign({\n    *           mojo: { type: BaseTypes.TYPES.UINT8 },\n    *         }, super.netScheme);\n    *     }\n    */\n    static get netScheme() {\n        return Object.assign({\n            mass: { type: BaseTypes.TYPES.FLOAT32 },\n            position: { type: BaseTypes.TYPES.CLASSINSTANCE },\n            angle: { type: BaseTypes.TYPES.FLOAT32 },\n            velocity: { type: BaseTypes.TYPES.CLASSINSTANCE },\n            angularVelocity: { type: BaseTypes.TYPES.FLOAT32 }\n        }, super.netScheme);\n    }\n\n    /**\n    * Creates an instance of a physical object.\n    * Override to provide starting values for position, velocity, angle and angular velocity.\n    * NOTE: all subclasses of this class must comply with this constructor signature.\n    *       This is required because the engine will create temporary instances when\n    *       syncs arrive on the clients.\n    * @param {GameEngine} gameEngine - the gameEngine this object will be used in\n    * @param {Object} options - options for the new object. See {@link GameObject}\n    * @param {Object} props - properties to be set in the new object\n    * @param {TwoVector} props.position - position vector\n    * @param {TwoVector} props.velocity - velocity vector\n    * @param {Number} props.angle - orientation angle\n    * @param {Number} props.mass - the mass\n    * @param {Number} props.angularVelocity - angular velocity\n    */\n    constructor(gameEngine, options, props) {\n        super(gameEngine, options, props);\n        this.bendingIncrements = 0;\n\n        // set default position, velocity and quaternion\n        this.position = new TwoVector(0, 0);\n        this.velocity = new TwoVector(0, 0);\n        this.angle = 0;\n        this.angularVelocity = 0;\n        this.mass = 0;\n\n        // use values if provided\n        props = props || {};\n        if (props.position) this.position.copy(props.position);\n        if (props.velocity) this.velocity.copy(props.velocity);\n        if (props.angle) this.angle = props.angle;\n        if (props.angularVelocity) this.angularVelocity = props.angularVelocity;\n        if (props.mass) this.mass = props.mass;\n\n        this.class = PhysicalObject2D;\n    }\n\n    /**\n     * Called after the object is added to to the game world.\n     * This is the right place to add renderer sub-objects, physics sub-objects\n     * and any other resources that should be created\n     */\n    onAddToWorld() {}\n\n    /**\n     * Formatted textual description of the dynamic object.\n     * The output of this method is used to describe each instance in the traces,\n     * which significantly helps in debugging.\n     *\n     * @return {String} description - a string describing the PhysicalObject2D\n     */\n    toString() {\n        let p = this.position.toString();\n        let v = this.velocity.toString();\n        let a = this.angle;\n        let av = this.angularVelocity;\n        return `phyObj2D[${this.id}] player${this.playerId} Pos=${p} Vel=${v} Ang=${a} AVel=${av}`;\n    }\n\n    /**\n     * Each object class can define its own bending overrides.\n     * return an object which can include attributes: position, velocity,\n     * angle, and angularVelocity.  In each case, you can specify a min value, max\n     * value, and a percent value.\n     *\n     * @return {Object} bending - an object with bending paramters\n     */\n    get bending() {\n        return {\n            // example:\n            // position: { percent: 0.8, min: 0.0, max: 4.0 },\n            // velocity: { percent: 0.4, min: 0.0 },\n            // angularVelocity: { percent: 0.0 },\n            // angleLocal: { percent: 0.0 }\n        };\n    }\n\n    // display object's physical attributes as a string\n    // for debugging purposes mostly\n    bendingToString() {\n        if (this.bendingIncrements)\n            return `ΔPos=${this.bendingPositionDelta} ΔVel=${this.bendingVelocityDelta} ΔAngle=${this.bendingAngleDelta} increments=${this.bendingIncrements}`;\n        return 'no bending';\n    }\n\n    // derive and save the bending increment parameters:\n    // - bendingPositionDelta\n    // - bendingVelocityDelta\n    // - bendingAVDelta\n    // - bendingAngleDelta\n    // these can later be used to \"bend\" incrementally from the state described\n    // by \"original\" to the state described by \"self\"\n    bendToCurrent(original, percent, worldSettings, isLocal, increments) {\n\n        let bending = { increments, percent };\n        // if the object has defined a bending multiples for this object, use them\n        let positionBending = Object.assign({}, bending, this.bending.position);\n        let velocityBending = Object.assign({}, bending, this.bending.velocity);\n        let angleBending = Object.assign({}, bending, this.bending.angle);\n        let avBending = Object.assign({}, bending, this.bending.angularVelocity);\n\n        // check for local object overrides to bendingTarget\n        if (isLocal) {\n            Object.assign(positionBending, this.bending.positionLocal);\n            Object.assign(velocityBending, this.bending.velocityLocal);\n            Object.assign(angleBending, this.bending.angleLocal);\n            Object.assign(avBending, this.bending.angularVelocityLocal);\n        }\n\n        // get the incremental delta position & velocity\n        this.incrementScale = percent / increments;\n        this.bendingPositionDelta = original.position.getBendingDelta(this.position, positionBending);\n        this.bendingVelocityDelta = original.velocity.getBendingDelta(this.velocity, velocityBending);\n\n        // get the incremental angular-velocity\n        this.bendingAVDelta = (this.angularVelocity - original.angularVelocity) * this.incrementScale * avBending.percent;\n\n        // get the incremental angle correction\n        this.bendingAngleDelta = MathUtils.interpolateDeltaWithWrapping(original.angle, this.angle, angleBending.percent, 0, 2 * Math.PI) / increments;\n\n        this.bendingTarget = (new this.constructor());\n        this.bendingTarget.syncTo(this);\n\n        // revert to original\n        this.position.copy(original.position);\n        this.angle = original.angle;\n        this.angularVelocity = original.angularVelocity;\n        this.velocity.copy(original.velocity);\n\n        this.bendingIncrements = increments;\n        this.bendingOptions = bending;\n\n        this.refreshToPhysics();\n    }\n\n    syncTo(other, options) {\n\n        super.syncTo(other);\n\n        this.position.copy(other.position);\n        this.angle = other.angle;\n        this.angularVelocity = other.angularVelocity;\n\n        if (!options || !options.keepVelocity) {\n            this.velocity.copy(other.velocity);\n        }\n\n        if (this.physicsObj) this.refreshToPhysics();\n    }\n\n    // update position, angle, angular velocity, and velocity from new physical state.\n    refreshFromPhysics() {\n        this.copyVector(this.physicsObj.position, this.position);\n        this.copyVector(this.physicsObj.velocity, this.velocity);\n        this.angle = this.physicsObj.angle;\n        this.angularVelocity = this.physicsObj.angularVelocity;\n    }\n\n    // generic vector copy.  We need this because different\n    // physics engines have different implementations.\n    // TODO: Better implementation: the physics engine implementor\n    // should define copyFromLanceVector and copyToLanceVector\n    copyVector(source, target) {\n        let sourceVec = source;\n        if (typeof source[0] === 'number' && typeof source[1] === 'number')\n            sourceVec = { x: source[0], y: source[1] };\n\n        if (typeof target.copy === 'function') {\n            target.copy(sourceVec);\n        } else if (target instanceof Float32Array) {\n            target[0] = sourceVec.x;\n            target[1] = sourceVec.y;\n        } else {\n            target.x = sourceVec.x;\n            target.y = sourceVec.y;\n        }\n    }\n\n    // update position, angle, angular velocity, and velocity from new game state.\n    refreshToPhysics() {\n        this.copyVector(this.position, this.physicsObj.position);\n        this.copyVector(this.velocity, this.physicsObj.velocity);\n        this.physicsObj.angle = this.angle;\n        this.physicsObj.angularVelocity = this.angularVelocity;\n    }\n\n    // apply one increment of bending\n    applyIncrementalBending(stepDesc) {\n        if (this.bendingIncrements === 0)\n            return;\n\n        let timeFactor = 1;\n        if (stepDesc && stepDesc.dt)\n            timeFactor = stepDesc.dt / (1000 / 60);\n\n        const posDelta = this.bendingPositionDelta.clone().multiplyScalar(timeFactor);\n        const velDelta = this.bendingVelocityDelta.clone().multiplyScalar(timeFactor);\n        this.position.add(posDelta);\n        this.velocity.add(velDelta);\n        this.angularVelocity += (this.bendingAVDelta * timeFactor);\n        this.angle += (this.bendingAngleDelta * timeFactor);\n\n        this.bendingIncrements--;\n    }\n\n    // interpolate implementation\n    interpolate(nextObj, percent) {\n\n        // slerp to target position\n        this.position.lerp(nextObj.position, percent);\n        this.angle = MathUtils.interpolateDeltaWithWrapping(this.angle, nextObj.angle, percent, 0, 2 * Math.PI);\n    }\n}\n\nexport default PhysicalObject2D;\n","import GameObject from './GameObject';\nimport BaseTypes from './BaseTypes';\nimport ThreeVector from './ThreeVector';\nimport Quaternion from './Quaternion';\n\n/**\n * The PhysicalObject3D is the base class for physical game objects\n */\nclass PhysicalObject3D extends GameObject {\n\n    /**\n    * The netScheme is a dictionary of attributes in this game\n    * object.  The attributes listed in the netScheme are those exact\n    * attributes which will be serialized and sent from the server\n    * to each client on every server update.\n    * The netScheme member is implemented as a getter.\n    *\n    * You may choose not to implement this method, in which\n    * case your object only transmits the default attributes\n    * which are already part of {@link PhysicalObject3D}.\n    * But if you choose to add more attributes, make sure\n    * the return value includes the netScheme of the super class.\n    *\n    * @memberof PhysicalObject3D\n    * @member {Object} netScheme\n    * @example\n    *     static get netScheme() {\n    *       return Object.assign({\n    *           mojo: { type: BaseTypes.TYPES.UINT8 },\n    *         }, super.netScheme);\n    *     }\n    */\n    static get netScheme() {\n        return Object.assign({\n            position: { type: BaseTypes.TYPES.CLASSINSTANCE },\n            quaternion: { type: BaseTypes.TYPES.CLASSINSTANCE },\n            velocity: { type: BaseTypes.TYPES.CLASSINSTANCE },\n            angularVelocity: { type: BaseTypes.TYPES.CLASSINSTANCE }\n        }, super.netScheme);\n    }\n\n    /**\n    * Creates an instance of a physical object.\n    * Override to provide starting values for position, velocity, quaternion and angular velocity.\n    * NOTE: all subclasses of this class must comply with this constructor signature.\n    *       This is required because the engine will create temporary instances when\n    *       syncs arrive on the clients.\n    * @param {GameEngine} gameEngine - the gameEngine this object will be used in\n    * @param {Object} options - options for the new object. See {@link GameObject}\n    * @param {Object} props - properties to be set in the new object\n    * @param {ThreeVector} props.position - position vector\n    * @param {ThreeVector} props.velocity - velocity vector\n    * @param {Quaternion} props.quaternion - orientation quaternion\n    * @param {ThreeVector} props.angularVelocity - 3-vector representation of angular velocity\n    */\n    constructor(gameEngine, options, props) {\n        super(gameEngine, options, props);\n        this.bendingIncrements = 0;\n\n        // set default position, velocity and quaternion\n        this.position = new ThreeVector(0, 0, 0);\n        this.velocity = new ThreeVector(0, 0, 0);\n        this.quaternion = new Quaternion(1, 0, 0, 0);\n        this.angularVelocity = new ThreeVector(0, 0, 0);\n\n        // use values if provided\n        props = props || {};\n        if (props.position) this.position.copy(props.position);\n        if (props.velocity) this.velocity.copy(props.velocity);\n        if (props.quaternion) this.quaternion.copy(props.quaternion);\n        if (props.angularVelocity) this.angularVelocity.copy(props.angularVelocity);\n\n        this.class = PhysicalObject3D;\n    }\n\n    /**\n     * Formatted textual description of the dynamic object.\n     * The output of this method is used to describe each instance in the traces,\n     * which significantly helps in debugging.\n     *\n     * @return {String} description - a string describing the PhysicalObject3D\n     */\n    toString() {\n        let p = this.position.toString();\n        let v = this.velocity.toString();\n        let q = this.quaternion.toString();\n        let a = this.angularVelocity.toString();\n        return `phyObj[${this.id}] player${this.playerId} Pos${p} Vel${v} Dir${q} AVel${a}`;\n    }\n\n    // display object's physical attributes as a string\n    // for debugging purposes mostly\n    bendingToString() {\n        if (this.bendingOptions)\n            return `bend=${this.bendingOptions.percent} deltaPos=${this.bendingPositionDelta} deltaVel=${this.bendingVelocityDelta} deltaQuat=${this.bendingQuaternionDelta}`;\n        return 'no bending';\n    }\n\n    // derive and save the bending increment parameters:\n    // - bendingPositionDelta\n    // - bendingAVDelta\n    // - bendingQuaternionDelta\n    // these can later be used to \"bend\" incrementally from the state described\n    // by \"original\" to the state described by \"self\"\n    bendToCurrent(original, percent, worldSettings, isLocal, increments) {\n\n        let bending = { increments, percent };\n        // if the object has defined a bending multiples for this object, use them\n        let positionBending = Object.assign({}, bending, this.bending.position);\n        let velocityBending = Object.assign({}, bending, this.bending.velocity);\n\n        // check for local object overrides to bendingTarget\n        if (isLocal) {\n            Object.assign(positionBending, this.bending.positionLocal);\n            Object.assign(velocityBending, this.bending.velocityLocal);\n        }\n\n        // get the incremental delta position & velocity\n        this.incrementScale = percent / increments;\n        this.bendingPositionDelta = original.position.getBendingDelta(this.position, positionBending);\n        this.bendingVelocityDelta = original.velocity.getBendingDelta(this.velocity, velocityBending);\n        this.bendingAVDelta = new ThreeVector(0, 0, 0);\n\n        // get the incremental quaternion rotation\n        this.bendingQuaternionDelta = (new Quaternion()).copy(original.quaternion).conjugate();\n        this.bendingQuaternionDelta.multiply(this.quaternion);\n\n        let axisAngle = this.bendingQuaternionDelta.toAxisAngle();\n        axisAngle.angle *= this.incrementScale;\n        this.bendingQuaternionDelta.setFromAxisAngle(axisAngle.axis, axisAngle.angle);\n\n        this.bendingTarget = (new this.constructor());\n        this.bendingTarget.syncTo(this);\n\n        this.position.copy(original.position);\n        this.quaternion.copy(original.quaternion);\n        this.angularVelocity.copy(original.angularVelocity);\n\n        this.bendingIncrements = increments;\n        this.bendingOptions = bending;\n\n        this.refreshToPhysics();\n    }\n\n    syncTo(other, options) {\n\n        super.syncTo(other);\n\n        this.position.copy(other.position);\n        this.quaternion.copy(other.quaternion);\n        this.angularVelocity.copy(other.angularVelocity);\n\n        if (!options || !options.keepVelocity) {\n            this.velocity.copy(other.velocity);\n        }\n\n        if (this.physicsObj)\n            this.refreshToPhysics();\n    }\n\n    // update position, quaternion, and velocity from new physical state.\n    refreshFromPhysics() {\n        this.position.copy(this.physicsObj.position);\n        this.quaternion.copy(this.physicsObj.quaternion);\n        this.velocity.copy(this.physicsObj.velocity);\n        this.angularVelocity.copy(this.physicsObj.angularVelocity);\n    }\n\n    // update position, quaternion, and velocity from new game state.\n    refreshToPhysics() {\n        if (!this.physicsObj) return\n        this.physicsObj.position.copy(this.position);\n        this.physicsObj.quaternion.copy(this.quaternion);\n        this.physicsObj.velocity.copy(this.velocity);\n        this.physicsObj.angularVelocity.copy(this.angularVelocity);\n    }\n\n    // apply one increment of bending\n    applyIncrementalBending(stepDesc) {\n        if (this.bendingIncrements === 0)\n            return;\n\n        if (stepDesc && stepDesc.dt) {\n            const timeFactor = stepDesc.dt / (1000 / 60);\n            // TODO: use clone() below.  it's cleaner\n            const posDelta = (new ThreeVector()).copy(this.bendingPositionDelta).multiplyScalar(timeFactor);\n            const avDelta = (new ThreeVector()).copy(this.bendingAVDelta).multiplyScalar(timeFactor);\n            this.position.add(posDelta);\n            this.angularVelocity.add(avDelta);\n\n            // one approach to orientation bending is slerp:\n            this.quaternion.slerp(this.bendingTarget.quaternion, this.incrementScale * timeFactor * 0.8);\n        } else {\n            this.position.add(this.bendingPositionDelta);\n            this.angularVelocity.add(this.bendingAVDelta);\n            this.quaternion.slerp(this.bendingTarget.quaternion, this.incrementScale);\n        }\n\n        // alternative: fixed delta-quaternion correction\n        // TODO: adjust quaternion bending to dt timefactor precision\n        // this.quaternion.multiply(this.bendingQuaternionDelta);\n        this.bendingIncrements--;\n    }\n\n    // interpolate implementation\n    interpolate(nextObj, percent) {\n\n        // slerp to target position\n        this.position.lerp(nextObj.position, percent);\n        this.quaternion.slerp(nextObj.quaternion, percent);\n    }\n}\n\nexport default PhysicalObject3D;\n","var path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                if (path.dirname(p) === p) return cb(er);\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n","import EventEmitter from 'event-emitter';\n\nconst SIXTY_PER_SEC = 1000 / 60;\nconst LOOP_SLOW_THRESH = 0.3;\nconst LOOP_SLOW_COUNT = 10;\n\n/**\n * Scheduler class\n *\n */\nexport default class Scheduler {\n\n    /**\n     * schedule a function to be called\n     *\n     * @param {Object} options the options\n     * @param {Function} options.tick the function to be called\n     * @param {Number} options.period number of milliseconds between each invocation, not including the function's execution time\n     * @param {Number} options.delay number of milliseconds to add when delaying or hurrying the execution\n     */\n    constructor(options) {\n        this.options = Object.assign({\n            tick: null,\n            period: SIXTY_PER_SEC,\n            delay: SIXTY_PER_SEC / 3\n        }, options);\n        this.nextExecTime = null;\n        this.requestedDelay = 0;\n        this.delayCounter = 0;\n\n        // mixin for EventEmitter\n        let eventEmitter = new EventEmitter();\n        this.on = eventEmitter.on;\n        this.once = eventEmitter.once;\n        this.removeListener = eventEmitter.removeListener;\n        this.emit = eventEmitter.emit;\n\n    }\n\n    // in same cases, setTimeout is ignored by the browser,\n    // this is known to happen during the first 100ms of a touch event\n    // on android chrome.  Double-check the game loop using requestAnimationFrame\n    nextTickChecker() {\n        let currentTime = (new Date()).getTime();\n        if (currentTime > this.nextExecTime) {\n            this.delayCounter++;\n            this.callTick();\n            this.nextExecTime = currentTime + this.options.stepPeriod;\n        }\n        window.requestAnimationFrame(this.nextTickChecker.bind(this));\n    }\n\n    nextTick() {\n        let stepStartTime = (new Date()).getTime();\n        if (stepStartTime > this.nextExecTime + this.options.period * LOOP_SLOW_THRESH) {\n            this.delayCounter++;\n        } else\n            this.delayCounter = 0;\n\n        this.callTick();\n        this.nextExecTime = stepStartTime + this.options.period + this.requestedDelay;\n        this.requestedDelay = 0;\n        setTimeout(this.nextTick.bind(this), this.nextExecTime - (new Date()).getTime());\n    }\n\n    callTick() {\n        if (this.delayCounter >= LOOP_SLOW_COUNT) {\n            this.emit('loopRunningSlow');\n            this.delayCounter = 0;\n        }\n        this.options.tick();\n    }\n\n    /**\n     * start the schedule\n     * @return {Scheduler} returns this scheduler instance\n     */\n    start() {\n        setTimeout(this.nextTick.bind(this));\n        if (typeof window === 'object' && typeof window.requestAnimationFrame === 'function')\n            window.requestAnimationFrame(this.nextTickChecker.bind(this));\n        return this;\n    }\n\n    /**\n     * delay next execution\n     */\n    delayTick() {\n        this.requestedDelay += this.options.delay;\n    }\n\n    /**\n     * hurry the next execution\n     */\n    hurryTick() {\n        this.requestedDelay -= this.options.delay;\n    }\n}\n","import Utils from './../lib/Utils';\nimport TwoVector from './TwoVector';\nimport ThreeVector from './ThreeVector';\nimport Quaternion from './Quaternion';\nimport BaseTypes from './BaseTypes';\n\nconst MAX_UINT_16 = 0xFFFF;\n\n/**\n * The Serializer is responsible for serializing the game world and its\n * objects on the server, before they are sent to each client.  On the client side the\n * Serializer deserializes these objects.\n *\n */\nclass Serializer {\n\n    constructor() {\n        this.registeredClasses = {};\n        this.customTypes = {};\n        this.registerClass(TwoVector);\n        this.registerClass(ThreeVector);\n        this.registerClass(Quaternion);\n    }\n\n    /**\n     * Adds a custom primitive to the serializer instance.\n     * This will enable you to use it in an object's netScheme\n     * @param customType\n     */\n    // TODO: the function below is not used, and it is not clear what that\n    // first argument is supposed to be\n    addCustomType(customType) {\n        this.customTypes[customType.type] = customType;\n    }\n\n    /**\n     * Checks if type can be assigned by value.\n     * @param {String} type Type to Checks\n     * @return {Boolean} True if type can be assigned\n     */\n    static typeCanAssign(type) {\n        return type !== BaseTypes.TYPES.CLASSINSTANCE && type !== BaseTypes.TYPES.LIST;\n    }\n\n    /**\n     * Registers a new class with the serializer, so it may be deserialized later\n     * @param {Function} classObj reference to the class (not an instance!)\n     * @param {String} classId Unit specifying a class ID\n     */\n    registerClass(classObj, classId) {\n        // if no classId is specified, hash one from the class name\n        classId = classId ? classId : Utils.hashStr(classObj.name);\n        if (this.registeredClasses[classId]) {\n            console.error(`Serializer: accidental override of classId ${classId} when registering class`, classObj);\n        }\n\n        this.registeredClasses[classId] = classObj;\n    }\n\n    deserialize(dataBuffer, byteOffset) {\n        byteOffset = byteOffset ? byteOffset : 0;\n        let localByteOffset = 0;\n\n        let dataView = new DataView(dataBuffer);\n\n        let objectClassId = dataView.getUint8(byteOffset + localByteOffset);\n\n        // todo if classId is 0 - take care of dynamic serialization.\n        let objectClass = this.registeredClasses[objectClassId];\n        if (objectClass == null) {\n            console.error('Serializer: Found a class which was not registered.  Please use serializer.registerClass() to register all serialized classes.');\n        }\n\n        localByteOffset += Uint8Array.BYTES_PER_ELEMENT; // advance the byteOffset after the classId\n\n        // create de-referenced instance of the class. gameEngine and id will be 'tacked on' later at the sync strategies\n        let obj = new objectClass(null, { id: null });\n        for (let property of Object.keys(objectClass.netScheme).sort()) {\n            let read = this.readDataView(dataView, byteOffset + localByteOffset, objectClass.netScheme[property]);\n            obj[property] = read.data;\n            localByteOffset += read.bufferSize;\n        }\n\n        return { obj, byteOffset: localByteOffset };\n    }\n\n    writeDataView(dataView, value, bufferOffset, netSchemProp) {\n        if (netSchemProp.type === BaseTypes.TYPES.FLOAT32) {\n            dataView.setFloat32(bufferOffset, value);\n        } else if (netSchemProp.type === BaseTypes.TYPES.INT32) {\n            dataView.setInt32(bufferOffset, value);\n        } else if (netSchemProp.type === BaseTypes.TYPES.INT16) {\n            dataView.setInt16(bufferOffset, value);\n        } else if (netSchemProp.type === BaseTypes.TYPES.INT8) {\n            dataView.setInt8(bufferOffset, value);\n        } else if (netSchemProp.type === BaseTypes.TYPES.UINT8) {\n            dataView.setUint8(bufferOffset, value);\n        } else if (netSchemProp.type === BaseTypes.TYPES.STRING) {\n\n            //   MAX_UINT_16 is a reserved (length) value which indicates string hasn't changed\n            if (value === null) {\n                dataView.setUint16(bufferOffset, MAX_UINT_16);\n            } else {\n                let strLen = value.length;\n                dataView.setUint16(bufferOffset, strLen);\n                let localBufferOffset = 2;\n                for (let i = 0; i < strLen; i++)\n                    dataView.setUint16(bufferOffset + localBufferOffset + i * 2, value.charCodeAt(i));\n            }\n        } else if (netSchemProp.type === BaseTypes.TYPES.CLASSINSTANCE) {\n            value.serialize(this, {\n                dataBuffer: dataView.buffer,\n                bufferOffset: bufferOffset\n            });\n        } else if (netSchemProp.type === BaseTypes.TYPES.LIST) {\n            let localBufferOffset = 0;\n\n            // a list is comprised of the number of items followed by the items\n            dataView.setUint16(bufferOffset + localBufferOffset, value.length);\n            localBufferOffset += Uint16Array.BYTES_PER_ELEMENT;\n\n            for (let item of value) {\n                // TODO: inelegant, currently doesn't support list of lists\n                if (netSchemProp.itemType === BaseTypes.TYPES.CLASSINSTANCE) {\n                    let serializedObj = item.serialize(this, {\n                        dataBuffer: dataView.buffer,\n                        bufferOffset: bufferOffset + localBufferOffset\n                    });\n                    localBufferOffset += serializedObj.bufferOffset;\n                } else if (netSchemProp.itemType === BaseTypes.TYPES.STRING) {\n                    //   MAX_UINT_16 is a reserved (length) value which indicates string hasn't changed\n                    if (item === null) {\n                        dataView.setUint16(bufferOffset + localBufferOffset, MAX_UINT_16);\n                        localBufferOffset += Uint16Array.BYTES_PER_ELEMENT;\n                    } else {\n                        let strLen = item.length;\n                        dataView.setUint16(bufferOffset + localBufferOffset, strLen);\n                        localBufferOffset += Uint16Array.BYTES_PER_ELEMENT;\n                        for (let i = 0; i < strLen; i++)\n                            dataView.setUint16(bufferOffset + localBufferOffset + i * 2, item.charCodeAt(i));\n                        localBufferOffset += Uint16Array.BYTES_PER_ELEMENT * strLen;\n                    }\n                } else {\n                    this.writeDataView(dataView, item, bufferOffset + localBufferOffset, { type: netSchemProp.itemType });\n                    localBufferOffset += this.getTypeByteSize(netSchemProp.itemType);\n                }\n            }\n        } else if (this.customTypes[netSchemProp.type]) {\n            // this is a custom data property which needs to define its own write method\n            this.customTypes[netSchemProp.type].writeDataView(dataView, value, bufferOffset);\n        } else {\n            console.error(`No custom property ${netSchemProp.type} found!`);\n        }\n\n    }\n\n    readDataView(dataView, bufferOffset, netSchemProp) {\n        let data, bufferSize;\n\n        if (netSchemProp.type === BaseTypes.TYPES.FLOAT32) {\n            data = dataView.getFloat32(bufferOffset);\n            bufferSize = this.getTypeByteSize(netSchemProp.type);\n        } else if (netSchemProp.type === BaseTypes.TYPES.INT32) {\n            data = dataView.getInt32(bufferOffset);\n            bufferSize = this.getTypeByteSize(netSchemProp.type);\n        } else if (netSchemProp.type === BaseTypes.TYPES.INT16) {\n            data = dataView.getInt16(bufferOffset);\n            bufferSize = this.getTypeByteSize(netSchemProp.type);\n        } else if (netSchemProp.type === BaseTypes.TYPES.INT8) {\n            data = dataView.getInt8(bufferOffset);\n            bufferSize = this.getTypeByteSize(netSchemProp.type);\n        } else if (netSchemProp.type === BaseTypes.TYPES.UINT8) {\n            data = dataView.getUint8(bufferOffset);\n            bufferSize = this.getTypeByteSize(netSchemProp.type);\n        } else if (netSchemProp.type === BaseTypes.TYPES.STRING) {\n            let length = dataView.getUint16(bufferOffset);\n            let localBufferOffset = Uint16Array.BYTES_PER_ELEMENT;\n            bufferSize = localBufferOffset;\n            if (length === MAX_UINT_16) {\n                data = null;\n            } else {\n                let a = [];\n                for (let i = 0; i < length; i++)\n                    a[i] = dataView.getUint16(bufferOffset + localBufferOffset + i * 2);\n                data = String.fromCharCode.apply(null, a);\n                bufferSize += length * Uint16Array.BYTES_PER_ELEMENT;\n            }\n        } else if (netSchemProp.type === BaseTypes.TYPES.CLASSINSTANCE) {\n            var deserializeData = this.deserialize(dataView.buffer, bufferOffset);\n            data = deserializeData.obj;\n            bufferSize = deserializeData.byteOffset;\n        } else if (netSchemProp.type === BaseTypes.TYPES.LIST) {\n            let localBufferOffset = 0;\n\n            let items = [];\n            let itemCount = dataView.getUint16(bufferOffset + localBufferOffset);\n            localBufferOffset += Uint16Array.BYTES_PER_ELEMENT;\n\n            for (let x = 0; x < itemCount; x++) {\n                let read = this.readDataView(dataView, bufferOffset + localBufferOffset, { type: netSchemProp.itemType });\n                items.push(read.data);\n                localBufferOffset += read.bufferSize;\n            }\n\n            data = items;\n            bufferSize = localBufferOffset;\n        } else if (this.customTypes[netSchemProp.type] != null) {\n            // this is a custom data property which needs to define its own read method\n            data = this.customTypes[netSchemProp.type].readDataView(dataView, bufferOffset);\n        } else {\n            console.error(`No custom property ${netSchemProp.type} found!`);\n        }\n\n        return { data: data, bufferSize: bufferSize };\n    }\n\n    getTypeByteSize(type) {\n\n        switch (type) {\n        case BaseTypes.TYPES.FLOAT32: {\n            return Float32Array.BYTES_PER_ELEMENT;\n        }\n        case BaseTypes.TYPES.INT32: {\n            return Int32Array.BYTES_PER_ELEMENT;\n        }\n        case BaseTypes.TYPES.INT16: {\n            return Int16Array.BYTES_PER_ELEMENT;\n        }\n        case BaseTypes.TYPES.INT8: {\n            return Int8Array.BYTES_PER_ELEMENT;\n        }\n        case BaseTypes.TYPES.UINT8: {\n            return Uint8Array.BYTES_PER_ELEMENT;\n        }\n\n        // not one of the basic properties\n        default: {\n            if (type === undefined) {\n                throw 'netScheme property declared without type attribute!';\n            } else if (this.customTypes[type] === null) {\n                throw `netScheme property ${type} undefined! Did you forget to add it to the serializer?`;\n            } else {\n                return this.customTypes[type].BYTES_PER_ELEMENT;\n            }\n        }\n\n        }\n\n    }\n}\n\nexport default Serializer;\n","import Serializable from './../serialize/Serializable';\nimport Utils from './../lib/Utils';\n\nexport default class NetworkedEventFactory {\n\n    constructor(serializer, eventName, options) {\n        options = Object.assign({}, options);\n\n        this.seriazlier = serializer;\n        this.options = options;\n\n        this.eventName = eventName;\n        this.netScheme = options.netScheme;\n\n    }\n\n    /**\n     * Creates a new networkedEvent\n     * @param {Object} payload an object representing the payload to be transferred over the wire\n     * @return {Serializable} the new networkedEvent object\n     */\n    create(payload) {\n        let networkedEvent = new Serializable();\n        networkedEvent.classId = Utils.hashStr(this.eventName);\n        networkedEvent.eventName = this.eventName\n\n        if (this.netScheme) {\n            networkedEvent.netScheme = Object.assign({}, this.netScheme);\n\n            // copy properties from the networkedEvent instance to its ad-hoc netsScheme\n            for (let property of Object.keys(this.netScheme)) {\n                networkedEvent[property] = payload[property];\n            }\n\n        } else {\n            // todo take care of the event where no netScheme is defined\n        }\n\n        return networkedEvent;\n    }\n\n}\n","import BaseTypes from '../serialize/BaseTypes';\nimport Serializable from '../serialize/Serializable';\n\n/**\n * Defines a collection of NetworkEvents to be transmitted over the wire\n */\nexport default class NetworkedEventCollection extends Serializable {\n\n    static get netScheme() {\n        return {\n            events: {\n                type: BaseTypes.TYPES.LIST,\n                itemType: BaseTypes.TYPES.CLASSINSTANCE\n            },\n        };\n    }\n\n    constructor(events) {\n        super();\n        this.events = events || [];\n    }\n\n}\n","import BaseTypes from '../serialize/BaseTypes';\n\nimport NetworkedEventFactory from './NetworkedEventFactory';\nimport NetworkedEventCollection from './NetworkedEventCollection';\nimport Utils from './../lib/Utils';\n\nexport default class NetworkTransmitter {\n\n    constructor(serializer, world) {\n        this.serializer = serializer;\n        this.world = world\n\n        this.registeredEvents = [];\n        this.networkedEventCollection = {}\n\n        this.serializer.registerClass(NetworkedEventCollection);\n\n        this.registerNetworkedEventFactory('objectUpdate', {\n            netScheme: {\n                stepCount: { type: BaseTypes.TYPES.INT32 },\n                objectInstance: { type: BaseTypes.TYPES.CLASSINSTANCE }\n            }\n        });\n\n        this.registerNetworkedEventFactory('objectCreate', {\n            netScheme: {\n                stepCount: { type: BaseTypes.TYPES.INT32 },\n                objectInstance: { type: BaseTypes.TYPES.CLASSINSTANCE }\n            }\n        });\n\n        this.registerNetworkedEventFactory('objectDestroy', {\n            netScheme: {\n                stepCount: { type: BaseTypes.TYPES.INT32 },\n                objectInstance: { type: BaseTypes.TYPES.CLASSINSTANCE }\n            }\n        });\n\n        this.registerNetworkedEventFactory('syncHeader', {\n            netScheme: {\n                stepCount: { type: BaseTypes.TYPES.INT32 },\n                fullUpdate: { type: BaseTypes.TYPES.UINT8 }\n            }\n        });\n\n        world.onAddGroup = (name) => {\n            this.networkedEventCollection[name] = new NetworkedEventCollection()\n        }\n\n        world.onRemoveGroup = (name) => {\n            delete this.networkedEventCollection[name]\n        }\n    }\n\n    registerNetworkedEventFactory(eventName, options) {\n        options = Object.assign({}, options);\n\n        let classHash = Utils.hashStr(eventName);\n\n        let networkedEventPrototype = function() {};\n        networkedEventPrototype.prototype.classId = classHash;\n        networkedEventPrototype.prototype.eventName = eventName;\n        networkedEventPrototype.netScheme = options.netScheme;\n\n        this.serializer.registerClass(networkedEventPrototype, classHash);\n\n        this.registeredEvents[eventName] = new NetworkedEventFactory(this.serializer, eventName, options);\n    }\n\n    addNetworkedEvent(roomName, eventName, payload) {\n        if (!this.registeredEvents[eventName]) {\n            console.error(`NetworkTransmitter: no such event ${eventName}`);\n            return null;\n        }\n        if (!this.networkedEventCollection[roomName]) {\n            return null\n        }\n\n        let stagedNetworkedEvent = this.registeredEvents[eventName].create(payload);\n        this.networkedEventCollection[roomName].events.push(stagedNetworkedEvent);\n        return stagedNetworkedEvent;\n    }\n\n    serializePayload(roomName) {\n        if (!this.networkedEventCollection[roomName]) {\n            return null\n        }\n        if (this.networkedEventCollection[roomName].events.length === 0)\n            return null;\n\n        let dataBuffer = this.networkedEventCollection[roomName].serialize(this.serializer);\n\n        return dataBuffer;\n    }\n\n    deserializePayload(payload) {\n        return this.serializer.deserialize(payload.dataBuffer).obj;\n    }\n\n    clearPayload(roomName) {\n        this.networkedEventCollection[roomName].events = []\n    }\n\n}\n","import EventEmitter from 'event-emitter';\nimport http from 'http';\n\n/**\n * Measures network performance between the client and the server\n * Represents both the client and server portions of NetworkMonitor\n */\nexport default class NetworkMonitor {\n\n    constructor(server) {\n\n        // server-side keep game name\n        if (server) {\n            this.server = server;\n            this.gameName = Object.getPrototypeOf(server.gameEngine).constructor.name;\n        }\n\n        // mixin for EventEmitter\n        let eventEmitter = new EventEmitter();\n        this.on = eventEmitter.on;\n        this.once = eventEmitter.once;\n        this.removeListener = eventEmitter.removeListener;\n        this.emit = eventEmitter.emit;\n    }\n\n    // client\n    registerClient(clientEngine) {\n        this.queryIdCounter = 0;\n        this.RTTQueries = {};\n\n        this.movingRTTAverage = 0;\n        this.movingRTTAverageFrame = [];\n        this.movingFPSAverageSize = clientEngine.options.healthCheckRTTSample;\n        this.clientEngine = clientEngine;\n        clientEngine.socket.on('RTTResponse', this.onReceivedRTTQuery.bind(this));\n        setInterval(this.sendRTTQuery.bind(this), clientEngine.options.healthCheckInterval);\n    }\n\n    sendRTTQuery() {\n        // todo implement cleanup of older timestamp\n        this.RTTQueries[this.queryIdCounter] = new Date().getTime();\n        this.clientEngine.socket.emit('RTTQuery', this.queryIdCounter);\n        this.queryIdCounter++;\n    }\n\n    onReceivedRTTQuery(queryId) {\n        let RTT = (new Date().getTime()) - this.RTTQueries[queryId];\n\n        this.movingRTTAverageFrame.push(RTT);\n        if (this.movingRTTAverageFrame.length > this.movingFPSAverageSize) {\n            this.movingRTTAverageFrame.shift();\n        }\n        this.movingRTTAverage = this.movingRTTAverageFrame.reduce((a, b) => a + b) / this.movingRTTAverageFrame.length;\n        this.emit('RTTUpdate', {\n            RTT: RTT,\n            RTTAverage: this.movingRTTAverage\n        });\n    }\n\n    // server\n    registerPlayerOnServer(socket) {\n        socket.on('RTTQuery', this.respondToRTTQuery.bind(this, socket));\n        if (this.server && this.server.options.countConnections) {\n            http.get(`http://ping.games-eu.lance.gg:2000/${this.gameName}`).on('error', () => {});\n        }\n    }\n\n    respondToRTTQuery(socket, queryId) {\n        socket.emit('RTTResponse', queryId);\n    }\n\n}\n","import fs from 'fs';\nimport mkdirp from 'mkdirp';\nimport Utils from './lib/Utils';\nimport Scheduler from './lib/Scheduler';\nimport Serializer from './serialize/Serializer';\nimport NetworkTransmitter from './network/NetworkTransmitter';\nimport NetworkMonitor from './network/NetworkMonitor'\n\n/**\n * ServerEngine is the main server-side singleton code.\n * Extend this class with your own server-side logic, and\n * start a single instance.\n *\n * This class should not be used to contain the actual\n * game logic.  That belongs in the GameEngine class, where the mechanics\n * of the gameplay are actually implemented.\n * The ServerEngine singleton is typically a lightweight\n * implementation, logging gameplay statistics and registering\n * user activity and user data.\n *\n * The base class implementation is responsible for starting\n * the server, initiating each game step, accepting new\n * connections and dis-connections, emitting periodic game-state\n * updates, and capturing remote user inputs.\n */\nclass ServerEngine {\n\n    /**\n     * create a ServerEngine instance\n     *\n     * @param {SocketIO} io - the SocketIO server\n     * @param {GameEngine} gameEngine - instance of GameEngine\n     * @param {Object} options - server options\n     * @param {Number} options.stepRate - number of steps per second\n     * @param {Number} options.updateRate - number of steps in each update (sync)\n     * @param {Number} options.fullSyncRate - rate at which full-syncs are sent, in step count\n     * @param {String} options.tracesPath - path where traces should go\n     * @param {Boolean} options.countConnections - should ping player connections to lance.gg\n     * @param {Boolean} options.updateOnObjectCreation - should send update immediately when new object is created\n     * @param {Number} options.timeoutInterval=180 - number of seconds after which a player is automatically disconnected if no input is received. Set to 0 for no timeout\n     * @return {ServerEngine} serverEngine - self\n     */\n    constructor(io, gameEngine, world, options) {\n        this.World = world\n        this.options = Object.assign({\n            updateRate: 6,\n            stepRate: 60,\n            fullSyncRate: 20,\n            timeoutInterval: 180,\n            updateOnObjectCreation: true,\n            tracesPath: '',\n            countConnections: true,\n            debug: {\n                serverSendLag: false\n            }\n        }, options);\n        if (this.options.tracesPath !== '') {\n            this.options.tracesPath += '/';\n            mkdirp.sync(this.options.tracesPath);\n        }\n\n        this.io = io;\n\n        /**\n         * reference to game engine\n         * @member {GameEngine}\n         */\n        this.serializer = new Serializer();\n        this.gameEngine = gameEngine;\n        this.gameEngine.registerClasses(this.serializer);\n        this.networkMonitor = new NetworkMonitor(this);\n\n        /**\n         * Default room name\n         * @member {String} DEFAULT_ROOM_NAME\n         */\n        this.DEFAULT_ROOM_NAME = '/lobby';\n        this.rooms = {};\n        this.connectedPlayers = {};\n        this.playerInputQueues = {};\n        this.objMemory = {};\n\n        io.on('connection', this.onPlayerConnected.bind(this));\n        this.gameEngine.on('objectAdded', this.onObjectAdded.bind(this));\n        this.gameEngine.on('objectDestroyed', this.onObjectDestroyed.bind(this));\n\n        return this;\n    }\n\n    // start the ServerEngine\n    start() {\n        this.gameEngine.start();\n        this.networkTransmitter = new NetworkTransmitter(this.serializer, this.gameEngine.world);\n        this.gameEngine.emit('server__init');\n\n        let schedulerConfig = {\n            tick: this.step.bind(this),\n            period: 1000 / this.options.stepRate,\n            delay: 4\n        };\n        this.scheduler = new Scheduler(schedulerConfig).start();\n    }\n\n    // every server step starts here\n    step() {\n\n        // first update the trace state\n        this.gameEngine.trace.setStep(this.gameEngine.world.stepCount + 1);\n        this.gameEngine.emit('server__preStep', this.gameEngine.world.stepCount + 1);\n\n        this.serverTime = (new Date().getTime());\n\n        this.World.send()\n\n        // for each player, replay all the inputs in the oldest step\n        for (let playerId of Object.keys(this.playerInputQueues)) {\n            let inputQueue = this.playerInputQueues[playerId];\n            let queueSteps = Object.keys(inputQueue);\n            let minStep = Math.min.apply(null, queueSteps);\n\n            // check that there are inputs for this step,\n            // and that we have reached/passed this step\n            if (queueSteps.length > 0 && minStep <= this.gameEngine.world.stepCount) {\n                inputQueue[minStep].forEach(input => {\n                    this.gameEngine.emit('server__processInput', { input, playerId });\n                    this.gameEngine.emit('processInput', { input, playerId });\n                    this.gameEngine.processInput(input, playerId, true);\n                });\n                delete inputQueue[minStep];\n            }\n        }\n\n        // run the game engine step\n        this.gameEngine.step(false, this.serverTime / 1000);\n\n        // synchronize the state to all clients\n        //Object.keys(this.rooms).map(this.syncStateToClients.bind(this));\n\n        this.gameEngine.world.groups.forEach((group) => {\n            this.syncStateToClients(group)\n        })\n\n        // remove memory-objects which no longer exist\n        for (let objId of Object.keys(this.objMemory)) {\n            if (!(objId in this.gameEngine.world.objects)) {\n                delete this.objMemory[objId];\n            }\n        }\n\n        // step is done on the server side\n        this.gameEngine.emit('server__postStep', this.gameEngine.world.stepCount);\n\n        if (this.gameEngine.trace.length) {\n            let traceData = this.gameEngine.trace.rotate();\n            let traceString = '';\n            traceData.forEach(t => { traceString += `[${t.time.toISOString()}]${t.step}>${t.data}\\n`; });\n            fs.appendFile(`${this.options.tracesPath}server.trace`, traceString, err => { if (err) throw err; });\n        }\n    }\n\n    syncStateToClients(room) {\n\n        let world = this.gameEngine.world;\n\n        // update clients only at the specified step interval, as defined in options\n        // or if this room needs to sync\n        //const room = this.rooms[roomName];\n        const roomName = room.groupName\n        if (room.requestImmediateSync ||\n            this.gameEngine.world.stepCount % this.options.updateRate === 0) {\n\n            //const roomPlayers = Object.keys(this.connectedPlayers)\n             //   .filter(p => this.connectedPlayers[p].roomName === roomName);\n            // if at least one player is new, we should send a full payload\n            const roomPlayers = world.getObjectsOfGroup(roomName)\n            let diffUpdate = true;\n\n            for (const player of roomPlayers) {\n                if (player._roomName != roomName) continue\n                if (player.state === 'new') {\n                    player.state = 'synced';\n                    diffUpdate = false;\n                }\n            }\n\n            // also, one in N syncs is a full update, or a special request\n            if ((room.syncCounter++ % this.options.fullSyncRate === 0) || room.requestFullSync)\n                diffUpdate = false;\n\n            this.networkTransmitter.addNetworkedEvent(roomName, 'syncHeader', {\n                stepCount: world.stepCount,\n                fullUpdate: Number(!diffUpdate)\n            })\n\n            let dataObjects = {\n                all: {},\n                update: {}\n            }\n            \n            for (const player of roomPlayers) {\n                if (player._roomName != roomName) continue\n                if (player.tick) player.tick()\n                this.serializeUpdate(roomName, player, { diffUpdate });\n            }\n\n            const payload = this.networkTransmitter.serializePayload(roomName);\n\n            if (payload) {\n                for (const player of roomPlayers) { \n                    if (player._socket && player._roomName == roomName) {\n                        player._socket.emit('worldUpdate', payload)\n                    }\n                }\n            }\n            this.networkTransmitter.clearPayload(roomName); \n            room.requestImmediateSync = false;\n            room.requestFullSync = false;\n        }\n    }\n\n    serializeObject(player, schemeRules) {\n        const deepSerialize = (val, schemeParams, schemeQuery) => {\n            if (val == undefined) return\n            const groups = {\n                update: {},\n                all: {}\n            }\n            for (let prop of schemeParams) {\n                const value = val[prop]\n                const originVal = val.getPrev(prop)\n                if (value == undefined || typeof value == 'number' ||  typeof value == 'string') {\n                    if (originVal != val[prop]) {\n                        groups['update'][prop] = value\n                    }\n                    groups['all'][prop] = value\n                    val.setPrev(prop, value)\n                }\n                else if (prop.broadcast) {\n                    const newVal = deepSerialize(val[prop], prop.broadcast, schemeQuery)\n                    for (let keyGroup in newVal.groups) {\n                        groups[keyGroup][prop] = newVal.groups[keyGroup]\n                    }\n                    val[prop] = newVal.origin\n                }\n            }\n            return { groups, origin: val }\n        }\n        let update = {}\n        let all = {}\n        for (let rule of schemeRules) {\n            const { groups } = deepSerialize(player, rule.params, rule.query)\n            update = {\n                ...update,\n                ...groups.update\n            }\n            all = {\n                ...all,\n                ...groups.all\n            }\n        }\n        return { update, all }\n    }\n\n    // create a serialized package of the game world\n    // TODO: this process could be made much much faster if the buffer creation and\n    //       size calculation are done in a single phase, along with string pruning.\n    serializeUpdate(roomName, object, options) {\n        let world = this.gameEngine.world;\n        let diffUpdate = Boolean(options && options.diffUpdate);\n        let objId = object.id\n        let obj = world.objects[objId];\n        let prevObject = this.objMemory[objId];\n\n        // if the object (in serialized form) hasn't changed, move on\n        if (diffUpdate) {\n            let s = obj.serialize(this.serializer);\n            if (prevObject && Utils.arrayBuffersEqual(s.dataBuffer, prevObject))\n                return;\n            else\n                this.objMemory[objId] = s.dataBuffer;\n\n            // prune strings which haven't changed\n            obj = obj.prunedStringsClone(this.serializer, prevObject);\n        }\n\n        this.networkTransmitter.addNetworkedEvent(roomName, 'objectUpdate', {\n            stepCount: world.stepCount,\n            objectInstance: obj\n        });\n    }\n\n    /**\n     * Create a room\n     *\n     * There is a default room called \"/lobby\".  All newly created players\n     * and objects are assigned to the default room.  When the server sends\n     * periodic syncs to the players, each player is only sent those objects\n     * which are present in his room.\n     *\n     * @param {String} roomName - the new room name\n     */\n    createRoom(roomName, options) {\n        this.gameEngine.world.addGroup(roomName, options)\n    }\n\n    /**\n     * Assign an object to a room\n     *\n     * @param {Object} obj - the object to move\n     * @param {String} roomName - the target room\n     */\n    assignObjectToRoom(obj, roomName) {\n        obj._roomName = roomName;\n        obj.$state = 'newInRoom'\n        this.gameEngine.world.addObjectInGroup(obj, roomName)\n    }\n\n    /**\n     * Assign a player to a room\n     *\n     * @param {Number} playerId - the playerId\n     * @param {String} roomName - the target room\n     */\n    assignPlayerToRoom(playerId, roomName) {\n       /* const room = this.rooms[roomName];\n        let player = null;\n        if (!room) {\n            this.gameEngine.trace.error(() => `cannot assign player to non-existant room ${roomName}`);\n            console.error(`player ${playerId} assigned to room [${roomName}] which isn't defined`);\n            return;\n        }\n        for (const p of Object.keys(this.connectedPlayers)) {\n            if (this.connectedPlayers[p].socket.playerId === playerId)\n                player = this.connectedPlayers[p];\n        }\n        if (!player) {\n            this.gameEngine.trace.error(() => `cannot assign non-existant playerId ${playerId} to room ${roomName}`);\n        }\n        const roomUpdate = { playerId: playerId, from: player.roomName, to: roomName };\n        player.socket.emit('roomUpdate', roomUpdate);\n        this.gameEngine.emit('server__roomUpdate', roomUpdate);\n        this.gameEngine.trace.info(() => `ROOM UPDATE: playerId ${playerId} from room ${player.roomName} to room ${roomName}`);\n        player.roomName = roomName;\n        room.requestImmediateSync = true;\n        room.requestFullSync = true;\n        */\n\n    }\n\n    // handle the object creation\n    onObjectAdded(obj) {\n       // obj._roomName = obj._roomName || this.DEFAULT_ROOM_NAME;\n       /* this.networkTransmitter.addNetworkedEvent('objectCreate', {\n            stepCount: this.gameEngine.world.stepCount,\n            objectInstance: obj\n        });*/\n\n        if (this.options.updateOnObjectCreation) {\n           // this.rooms[obj._roomName].requestImmediateSync = true;\n        }\n    }\n\n    // handle the object creation\n    onObjectDestroyed({ object, groups }) {\n        for (let room of groups) {\n            this.networkTransmitter.addNetworkedEvent(room, 'objectDestroy', {\n                stepCount: this.gameEngine.world.stepCount,\n                objectInstance: object\n            });\n        }\n    }\n\n    getPlayerId(socket) {\n    }\n\n    // handle new player connection\n    onPlayerConnected(socket) {\n        let that = this;\n\n        // save player\n        /*this.connectedPlayers[socket.id] = {\n            socket: socket,\n            state: 'new',\n            roomName: this.DEFAULT_ROOM_NAME\n        };*/\n        \n\n        let playerId = this.getPlayerId(socket);\n        if (!playerId) {\n            playerId = Utils.generateUID()\n        }\n        socket.playerId = playerId;\n        socket.lastHandledInput = null;\n        socket.joinTime = (new Date()).getTime();\n        this.resetIdleTimeout(socket);\n        \n        let playerEvent = { id: socket.id, playerId, joinTime: socket.joinTime, disconnectTime: 0 };\n        this.gameEngine.emit('server__playerJoined', playerEvent);\n        this.gameEngine.emit('playerJoined', playerEvent);\n        socket.emit('playerJoined', playerEvent);\n\n        socket.on('disconnect', function() {\n            playerEvent.disconnectTime = (new Date()).getTime();\n            that.onPlayerDisconnected(socket.id, playerId);\n            that.gameEngine.emit('server__playerDisconnected', playerEvent);\n            that.gameEngine.emit('playerDisconnected', playerEvent);\n        });\n\n        // todo rename, use number instead of name\n        socket.on('move', function(data) {\n            that.onReceivedInput(data, socket);\n        });\n\n        socket.on('_ping', function() {\n            socket.emit('_pong')\n        })\n\n        // we got a packet of trace data, write it out to a side-file\n        socket.on('trace', function(traceData) {\n            traceData = JSON.parse(traceData);\n            let traceString = '';\n            traceData.forEach(t => { traceString += `[${t.time}]${t.step}>${t.data}\\n`; });\n            fs.appendFile(`${that.options.tracesPath}client.${playerId}.trace`, traceString, err => { if (err) throw err; });\n        });\n\n        this.networkMonitor.registerPlayerOnServer(socket);\n\n        return playerId\n    }\n\n    // handle player timeout\n    onPlayerTimeout(socket) {\n        console.log(`Client timed out after ${this.options.timeoutInterval} seconds`, socket.id);\n        socket.disconnect();\n    }\n\n    // handle player dis-connection\n    onPlayerDisconnected(socketId, playerId) {\n        //delete this.connectedPlayers[socketId];\n        this.World.disconnectUser(playerId)\n        //console.log('Client disconnected');\n    }\n\n    // resets the idle timeout for a given player\n    resetIdleTimeout(socket) {\n        if (socket.idleTimeout) clearTimeout(socket.idleTimeout);\n        if (this.options.timeoutInterval > 0) {\n            socket.idleTimeout = setTimeout(() => {\n                this.onPlayerTimeout(socket);\n            }, this.options.timeoutInterval * 1000);\n        }\n    }\n\n    // add an input to the input-queue for the specific player\n    // each queue is key'd by step, because there may be multiple inputs\n    // per step\n    queueInputForPlayer(data, playerId) {\n\n        // create an input queue for this player, if one doesn't already exist\n        if (!this.playerInputQueues.hasOwnProperty(playerId))\n            this.playerInputQueues[playerId] = {};\n        let queue = this.playerInputQueues[playerId];\n\n        // create an array of inputs for this step, if one doesn't already exist\n        if (!queue[data.step]) queue[data.step] = [];\n\n        // add the input to the player's queue\n        queue[data.step].push(data);\n    }\n\n    // an input has been received from a client, queue it for next step\n    onReceivedInput(data, socket) {\n        \n        if (this.connectedPlayers[socket.id]) {\n            this.connectedPlayers[socket.id].socket.lastHandledInput = data.messageIndex;\n        }\n\n        this.resetIdleTimeout(socket);\n\n        this.queueInputForPlayer(data, socket.playerId);\n    }\n\n    /**\n     * Report game status\n     * This method is only relevant if the game uses MatchMaker functionality.\n     * This method must return the game status.\n     *\n     * @return {String} Stringified game status object.\n     */\n    gameStatus() {\n        let gameStatus = {\n            numPlayers: Object.keys(this.connectedPlayers).length,\n            upTime: 0,\n            cpuLoad: 0,\n            memoryLoad: 0,\n            players: {}\n        };\n\n        for (let p of Object.keys(this.connectedPlayers)) {\n            gameStatus.players[p] = {\n                frameRate: 0,\n            };\n        }\n\n        return JSON.stringify(gameStatus);\n    }\n\n}\n\nexport default ServerEngine;\n","import Trace from './Trace.js';\nimport Utils from './Utils'\n\nexport default {\n    Trace,\n    Utils\n};\n"],"names":["GameWorld","stepCount","objects","playerCount","idCount","groups","Map","uuidv4","query","queriedObjects","forEachObject","id","object","conditions","push","playerId","instanceType","components","forEach","componentClass","hasComponent","every","value","returnSingle","length","queryObjects","Object","assign","groupName","get","collections","map","getObject","has","addGroup","groupsDeleted","group","isDeleted","removeObjectOfGroup","callback","keys","returnValue","options","meta","set","requestImmediateSync","requestFullSync","syncCounter","onAddGroup","delete","onRemoveGroup","filter","objId","removeGroup","isValue","isObject","isPrototype","isFunction","_undefined","require$$0","require$$1","process","normalizeOpts","isPlainFunction","callable","d","Timer","currentTime","isActive","idCounter","events","event","eventId","type","startOffset","time","apply","thisContext","args","destroy","timerEvent","TimerEvent","TYPES","repeat","single","timer","Trace","traceLevel","TRACE_DEBUG","traceBuffer","step","error","trace","bind","TRACE_ERROR","warn","TRACE_WARN","info","TRACE_INFO","debug","TRACE_ALL","level","dataCB","Error","data","Date","buffer","s","GameEngine","isServerSide","window","glob","global","LANCE","gameEngine","defaultOpts","TRACE_NONE","clientIDSpace","NaN","eventEmitter","EventEmitter","on","once","removeListener","off","emit","serverObj","world","localId","localObj","hasOwnProperty","inputId","worldSettings","initWorld","play","isReenact","tick","timestamp","getTime","t","dt","physicsOnly","physicsEngine","objectFilter","undefined","Boolean","o","ignorePhysics","refreshFromPhysics","toString","serverCopyArrived","addObject","onAddToWorld","inputDesc","isServer","messageIndex","input","objectId","serializer","PhysicsEngine","console","Utils","str","bits","hash","i","charCodeAt","Math","pow","buf1","buf2","byteLength","dv1","Int8Array","dv2","url","Promise","resolve","reject","req","XMLHttpRequest","open","onload","status","JSON","parse","responseText","onerror","send","firstPart","random","secondPart","slice","BaseTypes","FLOAT32","INT32","INT16","INT8","UINT8","STRING","CLASSINSTANCE","LIST","Serializable","bufferOffset","netScheme","dataBuffer","dataView","classId","localBufferOffset","hashStr","constructor","name","dry","bufferSize","serialize","ArrayBuffer","DataView","setUint8","Uint8Array","BYTES_PER_ELEMENT","sort","property","writeDataView","Uint16Array","objectInstanceBufferOffset","item","itemType","listBufferOffset","getTypeByteSize","prevObject","deserialize","obj","isString","p","hasChanged","changedStrings","prunedCopy","indexOf","other","TwoVector","x","y","round3","round","sqrt","multiplyScalar","sourceObj","target","increment","clone","subtract","percent","max","min","increments","update_RECOMPUTE","grid","objAABB","newObjHash","_globalObjects","HSHG","getAABB","toHash","removeObject","update_REMOVEALL","testAABBOverlap","objA","objB","a","b","getLongestAABBEdge","abs","MAX_OBJECT_CELL_DENSITY","INITIAL_GRID_LENGTH","HIERARCHY_FACTOR","HIERARCHY_FACTOR_SQRT","SQRT2","UPDATE_METHOD","_grids","prototype","cellSize","objSize","oneGrid","newGrid","globalObjectsIndex","Grid","initCells","splice","replacementObj","pop","update","call","queryForCollisionPairs","broadOverlapTestCallback","j","k","l","c","cell","offset","adjacentCell","biggerGrid","objAAABB","objAHashInBiggerGrid","possibleCollisions","broadOverlapTest","occupiedCells","objectContainer","neighborOffsetArray","allCells","allCellsIndex","allObjects","cellCount","parentHierarchy","inverseCellSize","rowColumnCount","xyHashMask","Array","sharedInnerOffsets","_parentHierarchy","gridLength","wh","isOnRightEdge","isOnLeftEdge","isOnTopEdge","isOnBottomEdge","innerOffsets","leftOffset","rightOffset","topOffset","bottomOffset","uniqueOffsets","Cell","z","xHash","yHash","objHash","targetCell","occupiedCellsIndex","objectContainerIndex","allGridObjectsIndex","expandGrid","containerIndex","replacementCell","currentCellCount","currentRowColumnCount","currentXYHashMask","newCellCount","newRowColumnCount","newXYHashMask","_private","HSHGCollisionDetection","COLLISION_DISTANCE","previousCollisionPairs","stepCollidingPairs","reduce","accumulator","currentValue","pairId","getArrayPairId","o1","o2","pairObj","arrayPair","sortedArrayPair","differenceVector","BruteForceCollisionDetection","autoResolve","collisionPairs","isStatic","collidesWith","collisionDistance","copy","position","o1Box","getBox","o2Box","xMin","xMax","yMin","yMax","shiftY1","shiftY2","shiftX1","shiftX2","smallestYShift","smallestXShift","velocity","id1","id2","join","findCollision","split","k1","k2","checkPair","width","height","dv","dx","SimplePhysicsEngine","collisions","collisionDetection","gravity","collisionOptions","init","isRotatingRight","angle","rotationSpeed","isRotatingLeft","isAccelerating","rad","PI","cos","sin","acceleration","add","velMagnitude","maxSpeed","multiply","friction","worldWrap","ob","objectStep","detect","CANNON","require","CannonPhysicsEngine","World","quatNormalizeSkip","quatNormalizeFast","broadphase","NaiveBroadphase","radius","mass","shape","Sphere","body","Body","addBody","Box","Vec3","material","Material","radiusTop","radiusBottom","numSegments","Cylinder","removeBody","ThreeVector","MAX_DEL_THETA","Quaternion","w","axisAngle","toAxisAngle","axis","normalize","acos","divS","halfAngle","aw","ax","ay","az","bw","bx","by","bz","bending","cosHalfTheta","sqrSinHalfTheta","Number","EPSILON","sinHalfTheta","halfTheta","atan2","delTheta","sign","ratioA","ratioB","GameObject","props","getNewId","savedCopy","syncTo","isLocal","bendingIncrements","bendToCurrent","original","componentInstance","parentObject","componentName","angularVelocity","angleLocal","MathUtils","start","end","wrapMin","wrapMax","wrapTest","log","interpolatedVal","interpolateDeltaWithWrapping","wrapLength","DynamicObject","deceleration","deltaAngle","turnRight","bendingPositionDelta","bendingVelocityDelta","bendingAngleDelta","bendingAngle","positionBending","velocityBending","angleBending","positionLocal","velocityLocal","incrementScale","getBendingDelta","bendingTarget","bendingOptions","stepDesc","timeFactor","posDelta","velDelta","PhysicalObject2D","class","v","av","avBending","angularVelocityLocal","bendingAVDelta","refreshToPhysics","keepVelocity","physicsObj","copyVector","source","sourceVec","Float32Array","nextObj","lerp","PhysicalObject3D","quaternion","q","bendingQuaternionDelta","conjugate","setFromAxisAngle","avDelta","slerp","SIXTY_PER_SEC","LOOP_SLOW_THRESH","LOOP_SLOW_COUNT","Scheduler","period","delay","nextExecTime","requestedDelay","delayCounter","callTick","stepPeriod","requestAnimationFrame","nextTickChecker","stepStartTime","setTimeout","nextTick","MAX_UINT_16","Serializer","registeredClasses","customTypes","registerClass","customType","classObj","byteOffset","localByteOffset","objectClassId","getUint8","objectClass","read","readDataView","netSchemProp","setFloat32","setInt32","setInt16","setInt8","setUint16","strLen","serializedObj","getFloat32","getInt32","getInt16","getInt8","getUint16","String","fromCharCode","deserializeData","items","itemCount","Int32Array","Int16Array","NetworkedEventFactory","eventName","seriazlier","payload","networkedEvent","NetworkedEventCollection","NetworkTransmitter","registeredEvents","networkedEventCollection","registerNetworkedEventFactory","objectInstance","fullUpdate","classHash","networkedEventPrototype","roomName","stagedNetworkedEvent","create","NetworkMonitor","server","gameName","getPrototypeOf","clientEngine","queryIdCounter","RTTQueries","movingRTTAverage","movingRTTAverageFrame","movingFPSAverageSize","healthCheckRTTSample","socket","onReceivedRTTQuery","setInterval","sendRTTQuery","healthCheckInterval","queryId","RTT","shift","RTTAverage","respondToRTTQuery","countConnections","http","ServerEngine","io","updateRate","stepRate","fullSyncRate","timeoutInterval","updateOnObjectCreation","tracesPath","serverSendLag","mkdirp","sync","registerClasses","networkMonitor","DEFAULT_ROOM_NAME","rooms","connectedPlayers","playerInputQueues","objMemory","onPlayerConnected","onObjectAdded","onObjectDestroyed","networkTransmitter","schedulerConfig","scheduler","setStep","serverTime","inputQueue","queueSteps","minStep","processInput","syncStateToClients","traceData","rotate","traceString","toISOString","fs","appendFile","err","room","roomPlayers","getObjectsOfGroup","diffUpdate","player","_roomName","state","addNetworkedEvent","serializeUpdate","serializePayload","_socket","clearPayload","schemeRules","deepSerialize","val","schemeParams","schemeQuery","all","prop","originVal","getPrev","setPrev","broadcast","newVal","keyGroup","origin","rule","params","arrayBuffersEqual","prunedStringsClone","$state","addObjectInGroup","that","getPlayerId","generateUID","lastHandledInput","joinTime","resetIdleTimeout","playerEvent","disconnectTime","onPlayerDisconnected","onReceivedInput","registerPlayerOnServer","disconnect","socketId","disconnectUser","idleTimeout","clearTimeout","onPlayerTimeout","queue","queueInputForPlayer","gameStatus","numPlayers","upTime","cpuLoad","memoryLoad","players","frameRate","stringify"],"mappings":"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"}